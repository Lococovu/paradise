Events:
	On Discord Command:
		ID: discord_command
		Patterns:
			[on] discord command <([^\s]+)( .+)?$>
		Event values:
			event-object
			event-bot
			event-channel
			event-object
			event-user
			event-discordcommand
			event-guild
			event-message
			event-member
		Cancellable: true
Conditions:
	Bot is Paused in Guild:
		ID: CondBotIsPaused
		Description:
			Return if the bot is currently paused in a specific guild.
		Since:
			1.11
		Patterns:
			[disky] [the] bot is [currently] paused in [the] [guild] %guild%
			[disky] [the] bot (is not|isn't) [currently] paused in [the] [guild] %guild%
	Bot is Playing in Guild:
		ID: CondBotIsPlaying
		Description:
			Return if the bot is currently playing in a specific guild.
		Since:
			1.9
		Patterns:
			[disky] [the] bot is [currently] playing in [the] [guild] %guild%
			[disky] [the] bot (is not|isn't) [currently] playing in [the] [guild] %guild%
	Bot is Repeated in Guild:
		ID: CondBotIsRepeated
		Description:
			Return if the bot is currently repeating the track in a specific guild.
		Since:
			1.11
		Patterns:
			[disky] [the] bot is [currently] repeating [the track] in [the] [guild] %guild%
			[disky] [the] bot (is not|isn't) [currently] repeating [the track] in [the] [guild] %guild%
	Button Builder:
		ID: ScopeButton
		Description:
			This builder allow you to custom button easily. Use the one-line creator for a faster way! The string input represent the button ID or the URL if it's a link button.
		Since:
			1.12
		Patterns:
			make [new] [discord] button with [the] [(url|id)] %string%
	Category Builder:
		ID: ScopeCategory
		Description:
			This builder allow you to make category easily
		Since:
			1.4.1
		Patterns:
			make [new] [discord] category
	Command Builder:
		ID: ScopeCommand
		Description:
			[BETA] This builder allow you to make discord command easily
		Examples:
			make new command:
		Since:
			1.5
		Patterns:
			make [new] [discord] command
	Embed Builder:
		ID: ScopeEmbed
		Description:
			This builder allow you to make embed easily. You can specify the template used, you must register this template before use it!
		Examples:
			discord command embed:
	prefixes: !
	trigger:
		make embed:
			set title of embed to "Title"
			set description of embed to "Description%nl%The title leads to the URL, if given"
			set author of the embed to "Author name (Can point to URL)"
			set author icon of embed to "https://cdn.discordapp.com/emojis/825811394963177533.png?v=1"
			set author url of embed to "https://www.youtube.com/watch?v=i33DB6R8YUY"
			set colour of the embed to orange
			add inline field named "Field Name" with value "Colour sets %nl%< that" to fields of embed
			add inline field named "Field Name" with value "Color is a java Color%nl%Not a string" to fields of embed
			add inline field named "Field Name" with value "Field value" to fields of embed
			add field named "Non-inline field name" with value "The number of fields that can be shown on the same row is limited to 3, but is limited to 2 when an image is included" to fields of embed
			set image of embed to "https://media.discordapp.net/attachments/237757030708936714/390520880242884608/8xAac.png?width=508&height=522"
			set thumbnail of embed to "https://cdn.discordapp.com/emojis/825811394963177533.png?v=1"
			set title url of embed to "https://www.crunchyroll.com/fr/tonikawa-over-the-moon-for-you"
			set footer of embed to "Footer text"
			set footer icon of embed to "https://cdn.discordapp.com/emojis/825811394963177533.png?v=1"
			set timestamp of embed to now
		reply with last embed
		Since:
			1.0
		Patterns:
			make [new] [discord] [message] embed [using [the] [template] [(named|with name|with id)] %-string%]
	Emote is Animated:
		ID: CondIsAnimated
		Description:
			Check if an emote is animated or not.
		Examples:
			if event-emote is animated:
		Since:
			1.13
		Patterns:
			[disky] [the] [emote] %emote% is animated
			[disky] [the] [emote] %emote% (is not|isn't) animated
	Has Discord Permission:
		ID: CondHasDiscordPerm
		Description:
			See if a member has a specific DISCORD permission, in the guild or in a specific channel.
		Examples:
			discord command hasPerm <member> <permission>:
	prefixes: !
	trigger:
		if arg-1 has permission arg-2:
			reply with "Yes, %discord name of arg-1% have this permission!"
		else:
			reply with "Oh no, %discord name of arg-1% don't have this permission :("
		Since:
			1.6
		Patterns:
			[disky] [the] [member] %member% has [discord] permission %permission% [in [channel] %-channel/textchannel%]
			[disky] [the] [member] %member% (has not|hasn't|don't have|doesn't have) [discord] permission %permission% [in [channel] %-channel/textchannel%]
	Has Discord Role:
		ID: CondHasRole
		Description:
			See if a member has a specific DISCORD role or not.
		Examples:
			discord command role <member> <role>:
	prefixes: !
	trigger:
		if arg-1 has role arg-2:
			reply with "%discord name of arg-1% have the role %discord name of arg-2%!"
		else:
			reply with "%discord name of arg-1% doesn't have this role :/"
		Since:
			1.6
		Patterns:
			[disky] [the] [member] %member% has [discord] role %role%
			[disky] [the] [member] %member% (has not|hasn't|don't have|doesn't have) [discord] role %role%
	Invite Builder:
		ID: ScopeInvite
		Description:
			This builder allow you to make invite easily
		Since:
			1.7
		Patterns:
			make [new] [discord] invit(e|ation)
	Is Attachment Image:
		ID: CondIsImage
		Description:
			See if a specific attachment is an image.
		Since:
			1.7
		Patterns:
			[disky] att[achment[s]] %attachment% is [an] (image|img)
			[disky] att[achment[s]] %attachment% (isn't|is not|wasn't|was not) [an] (image|img)
	Is Attachment Spoiler:
		ID: CondIsSpoiler
		Description:
			See if a specific attachment is marked as a spoil.
		Since:
			1.7
		Patterns:
			[disky] att[achment[s]] %attachment% is [a] spoil[er]
			[disky] att[achment[s]] %attachment% (isn't|is not|wasn't|was not) [a] spoil[er]
	Is Attachment Video:
		ID: CondIsVideo
		Description:
			See if a specific attachment is a video.
		Since:
			1.7
		Patterns:
			[disky] att[achment[s]] %attachment% is [a] (vdo|video)
			[disky] att[achment[s]] %attachment% (isn't|is not|wasn't|was not) [a] (vdo|video)
	Is a bot loaded:
		ID: CondIsLoaded
		Description:
			See if a specific bot is loaded on the server or not.
		Examples:
			if bot "name" is loaded:
		Since:
			1.5.2
		Patterns:
			[disky] [bot] [(named|with name)] %string% (is|was) (loaded|online) [on the server]
			[disky] [bot] [(named|with name)] %string% (isn't|is not|wasn't|was not) (loaded|online) [on the server]
	Is a user a bot:
		ID: CondIsBot
		Description:
			See if a specific user is is a bot or not. Don't forget the 'DISCORD' word in the syntaxes!
		Examples:
			if event-user is a discord bot:
		Since:
			1.5.2
		Patterns:
			[disky] %user/member% (is|was) a discord bot
			[disky] %user/member% (is not|isn't) a discord bot
	Member is a Booster:
		ID: CondIsBooster
		Description:
			See if a member is boosting a specific guild.
		Examples:
			discord command isBooster <member>:
	prefixes: !
	trigger:
		if arg-1 is a booster:
			reply with ":v: Yay! %mention tag of arg 1% is boosting the server, say a big thanks :heart:"
		else:
			reply with ":x: Oh no, %mention tag of arg 1% is not boosting the server! What a bad guy :<"
		Since:
			1.5.3
		Patterns:
			[disky] [the] [member] %member% is [a] boost[er]
			[disky] [the] [member] %member% (is not|isn't) [a] boost[er]
	React to Message:
		ID: SectionReact
		Description:
			React to a message with an emote like the 'add reaction' effect. However, this section will be fired when someone react to this emote too.
		Examples:
			react to event-message with reaction "smile"
		Since:
			1.8
		Patterns:
			[disky] react to [the] [message] %message% with [emote] %emote% [using %-bot%] [to run]
	Reply and Wait:
		ID: SectionReply
		Description:
			Reply in a message, and wait until a user send another message after that. Can specify if the bot will detect it one time online or multiple.
		Examples:
			reply with "Hello world!" to run:
		Since:
			1.12
		Patterns:
			[disky] reply with [the] [message] %string/message/messagebuilder/embed% [and store it in %-object%] [and wait [the] answer from %-member%] [to run [one time]]
	Role Builder:
		ID: ScopeRole
		Description:
			This builder allow you to make role easily
		Since:
			1.4
		Patterns:
			make [new] [discord] role
	Text Channel Builder:
		ID: ScopeTextChannel
		Description:
			This builder allow you to make text channel easily
		Since:
			1.4
		Patterns:
			make [new] [discord] text[ ][-][ ]channel
	Voice Channel Builder:
		ID: ScopeVoiceChannel
		Description:
			This builder allow you to make voice channel easily
		Since:
			1.6
		Patterns:
			make [new] [discord] voice[ ][-][ ]channel
	Webhook Message Builder:
		ID: ScopeWebhookMessage
		Description:
			Webhook Message can have multiple embed, text content and different appearance than the original webhook.
		Since:
			1.8
		Patterns:
			make [new] [discord] webhook message
Effects:
	Add Button to Row:
		ID: EffAddButtonToRow
		Description:
			Add a new button to a specific button row. Maximum of 5 button per row, 5 row per message.
		Examples:
			discord command buttons:
	prefixes: !
	trigger:
		reply with "*buttons ...*" and store it in {_msg}
		set {_row} to new buttons row
		add new link button with url "http://disky.itsthesky.info/" with style danger with content "DiSky Website" with emoji "🔗" to row {_row}
		add new button with url "custom-id" with style danger with content "Dangerous!" with emoji "🔶" to row {_row}
		add new button with url "custom-id2" with style success with content "Green :D" with emoji "📗" to row {_row}
		add new disabled button with url "custom-id3" with style secondary with content "I'm disabled" with emoji "😭" to row {_row}
		add row {_row} to message {_msg}
		Since:
			1.13
		Patterns:
			[disky] add [the] [button] %button% to [the] row %buttonrow%
	Add Embed Field:
		ID: EffAddField
		Description:
			Add new field with name and value to embed's fields.
		Examples:
			add inline field named "Field name" with value "And epic description <3" to fields of embed
		Since:
			1.0
		Patterns:
			[disky] add field (named|with name) %string% [and] with [the] value %string% to [fields of] %embed%
			[disky] add inline field (named|with name) %string% [and] with [the] value %string% to [fields of] %embed%
	Add Reaction:
		ID: EffAddReaction
		Description:
			Add a specific reaction, on message.
		Examples:
			add reaction "smile" to event-message
		Since:
			1.3
		Patterns:
			[disky] (add|append) %emotes% to [(message|reactions of)] %message% [with %bot%]
	Add Row to Message:
		ID: EffAddRowToMessage
		Description:
			Add a new button rows to a message. Maximum 5 row per message.getMessage().
		Examples:
			discord command buttons:
	prefixes: !
	trigger:
		reply with "*buttons ...*" and store it in {_msg}
		set {_row} to new buttons row
		add new link button with url "http://disky.itsthesky.info/" with style danger with content "DiSky Website" with emoji "🔗" to row {_row}
		add new button with url "custom-id" with style danger with content "Dangerous!" with emoji "🔶" to row {_row}
		add new button with url "custom-id2" with style success with content "Green :D" with emoji "📗" to row {_row}
		add new disabled button with url "custom-id3" with style secondary with content "I'm disabled" with emoji "😭" to row {_row}
		add row {_row} to message {_msg}
		Since:
			1.13
		Patterns:
			(add|set) [the] [button] row %buttonrows% to [the] [message] %message%
	Add Slash Command Option:
		ID: EffAddOption
		Description:
			Add an (require or not) option to a specific command builder. See OptionType for possible sort of input!
		Examples:
			register require option USER with id "user" and description "The 'USER' word is an option type." to command
			register option STRING with id "text" and description "This option is not require" to command
		Since:
			1.5
		Patterns:
			[disky] register option [with type] %optiontype% with (id|name) %string% [and] [with] [(desc|description)] %string% to [command] [builder] %commandbuilder%
			[disky] register require option [with type] %optiontype% with (id|name) %string% [and] [with] [(desc|description)] %string% to [command] [builder] %commandbuilder%
	Allow / Deny permission:
		ID: EffManagePermission
		Description:
			Allow or deny a discord permission to a role or a user in a channel.
		Examples:
			discord command setupmute:
	permissions: administrator
	permission message: **:x: You don't have the permission!**
	prefixes: !
	trigger:
		make new role:
			set discord name of role builder to "Muted"
			set color of role builder to black
			loop text channels of event-guild:
				deny permission (message write) to role builer in loop-channel
		create last role builder in event-guild and store it in {_role}
		reply with "**Mute role created: %mention tag of {_role}%!**"
		Since:
			1.4
		Patterns:
			[disky] allow [discord] [perm[ission]] %permissions% to %member/role/rolebuilder% in [the] [channel] %channel/textchannel/voicechannel%
			[disky] deny [discord] [perm[ission]] %permissions% to %member/role/rolebuilder% in [the] [channel] %channel/textchannel/voicechannel%
	Append string / embed:
		ID: EffAppend
		Description:
			Append a string or an embed to a message builder (message builder can't have two and more embed!)
		Examples:
			append "My String" to {_m}
		Since:
			1.4
		Patterns:
			[disky] append %string/embed% to [message] [builder] %messagebuilder%
	Ban Member:
		ID: EffBanUser
		Description:
			Ban a member from a specific guild. With an optional reason. The optional amount of days specified will be removed every messages.
		Examples:
			ban event-member because of "ur so bad bro"
		Since:
			1.12
		Patterns:
			[disky] ban [the] [member] %member% [removing %-number% [days] of message[s]] [((for|with) [reason]|[be]cause [of]) %-string%]
	Clear Message Buttons:
		ID: EffClearButtons
		Description:
			Clear every buttons of a specific message.
		Examples:
			clear buttons from event-message
		Since:
			1.12
		Patterns:
			[disky] (clear|remove|delete) [all] buttons from [the] [message] %message%
	Clear Message Reactions:
		ID: EffClearReactions
		Description:
			Clear every reactions of a specific message.
		Examples:
			remove all reactions from event-message
		Since:
			1.10
		Patterns:
			[disky] (clear|remove|delete) [all] reactions from %message%
	Clone Discord Entity:
		ID: EffCloneEntity
		Description:
			Clone an existing discord entity (channel, category or role) in another guild.
		Examples:
			discord command clone <textchannel>:
	prefixes: !
	permissions: administrator
	permission message: :x: You don't have enough permission!
	trigger:
		clone arg-1 and store it in {_c}
		reply with "Channel cloned: %mention tag of {_c}%"
		Since:
			1.5.3
		Patterns:
			[disky] clone [discord] [entity] %role/textchannel/channel/category/voicechannel% [in [the] [guild] %-guild%] [and store (it|the entity) in %-object%]
	Create Category builder in Guild:
		ID: EffCreateCategory
		Description:
			Create the category builder in a guild, and optionally get it as category type.
		Examples:
			create category builder in event-guild
create category builder in event-guild and store it in {_cat}
		Since:
			1.4.1
		Patterns:
			[disky] create [the] [category] [builder] %categorybuilder% in [the] [guild] %guild% [and store it in %-object%]
	Create Invite builder in Channel:
		ID: EffCreateInvite
		Description:
			Create the invite builder in a specific text channel, and optionally get it.
		Examples:
			create invite builder in event-channel
create invite builder in event-channel and store it in {_voice}
		Since:
			1.7
		Patterns:
			[disky] create [the] [invite] [builder] %invitebuilder% in [the] [channel] %channel/textchannel% [and store it in %-object%]
	Create Voice Channel builder in Guild:
		ID: EffCreateVoice
		Description:
			Create the voice channel builder in a guild, and optionally get it as voice channel type.
		Examples:
			create voice channel builder in event-guild
create voice channel builder in event-guild and store it in {_voice}
		Since:
			1.6
		Patterns:
			[disky] create [the] [voice] [channel] [builder] %voicechannelbuilder% in [the] [guild] %guild% [and store it in %-object%]
	Create command builder with Bot:
		ID: EffCreateCommand
		Description:
			[BETA] Create the command builder with a bot.
!!! COMMAND TOOK AN HOUR TO BE UPDATED !!!
WE RECOMMEND TO REGISTER ALL COMMANDS IN ONE !!!
		Examples:
			create command builder with bot "MyBot"
		Since:
			1.5
		Patterns:
			[disky] create [the] [command] [builder] %commandbuilders% (using|with|via) [bot] [(named|with name)] %string%
	Create role builder in Guild:
		ID: EffCreateRole
		Description:
			Create the role from a role builder in a specific guild
		Examples:
			create role builder in event-guild
create role in event-guild and store it in {_role}
		Since:
			1.4
		Patterns:
			[disky] create [the] [role] [builder] %rolebuilder% in [the] [guild] %guild% [and store it in %-object%]
	Create text channel builder in Guild:
		ID: EffCreateTextChannel
		Description:
			Create the channel builder in a specific guild, and optionally get the text channel created.
		Examples:
			create channel builder in event-guild
create channel in event-guild and store it in {_channel}
		Since:
			1.0
		Patterns:
			[disky] create [the] [textchannel] [builder] %textchannelbuilder% in [the] [guild] %guild% [and store it in %-object%]
	Current Trigger event name:
		ID: EffSeeEventName
		Description:
			Simple debug effect to sout the event's name which this effect is in.
		Examples:
			sout the event name
		Since:
			1.0
		Patterns:
			[disky] (debug|sout|broadcast) [the] event[ ][-][ ]name
	Deafen / UnDeafen Member:
		ID: EffDeafenMember
		Description:
			Deafen or UnDeafen a member in a guild.
		Examples:
			deafen event-member
		Since:
			1.9
		Patterns:
			[disky] deafen [discord] %member% [in guild] [(with|via|using) %-bot%]
			[disky] un[( |-)]deafen [discord] %member% [in guild] [(with|via|using) %-bot%]
	Defer Interaction:
		ID: EffDeferInteraction
		Description:
			Let discord you've been receiving the interaction (work in buttons and slash commands events only) ONE TIME!
			If you're replying in one of these event, the deferring is useless and you'll get an error.
			Replying will automatically deferring the interaction!
		Examples:
			defer the interaction
		Since:
			1.13
		Patterns:
			[disky] (defer|acknowledge) [the] interaction [event]
	Delete Discord Entity:
		ID: EffDeleteEntity
		Description:
			Delete discord entity, such as channel, role, message, etc...
		Examples:
			discord command tempMessage <text>:
	prefixes: $
	trigger:
		reply with "The message you want me to say is: `%arg 1%`" and store it in {_msg}
		wait 5 second
		delete discord entity {_msg}
		Since:
			1.2
		Patterns:
			[disky] delete [discord entity] %messages/channels/voicechannel/textchannels/roles% [with %-bot%]
	Disable / Enable Button:
		ID: EffDisableButton
		Description:
			Enable or disable a button before building.
		Examples:
			enable the button
			disable the button
		Since:
			1.12
		Patterns:
			[disky] enable [the] [button] %button%
			[disky] disable [the] [button] %button%
	Disconnect Bot From Guild:
		ID: EffDisconnectBot
		Description:
			Disconnect the bot from a specific guild.
		Examples:
			discord command stop:
	prefixes: *
	trigger:
		stop current queue of event-guild
		disconnect bot of event-guild
		make embed:
			set author of embed to "Bye, See you next time 👋"
			set author icon of embed to avatar of event-member
			set color of embed to red
			set footer of embed to "Executed by %discord name of event-member%"
		reply with last embed
		Since:
			1.9
		Patterns:
			[disky] (close connection|disconnect) [the] bot of [the] [guild] %guild%
	Download Attachment:
		ID: EffAttDownload
		Description:
			Download the specific attachment to a file path.
		Examples:
			download {_attachment} in folder "plugins/data/attachments/"
		Since:
			1.7
		Patterns:
			[disky] (download|dl) [the] [attachment] %attachment% (in|to) [the] [(folder|path)] %string%
	Edit Message:
		ID: EffEditMessage
		Description:
			Edit any message from the bot with new message or embed.
		Examples:
			reply with ":v: Message ..." and store it in {_msg}
wait 3 second
edit message {_msg} to show ":x: ... has been edited"
		Since:
			1.2
		Patterns:
			[disky] edit [discord] [message] %message% (with|to show) [new (embed|string)] %embed/string/messagebuilder% [(keeping buttons|and keep buttons)]
	Kick Member:
		ID: EffKickUser
		Description:
			Kick a specific member from his guild.
		Examples:
			kick event-member because of "ur so bad bro v2"
		Since:
			1.12
		Patterns:
			[disky] kick [the] [member] %member% [((for|with) [reason]|[be]cause [of]) %-string%]
	Load Locale Audio:
		ID: EffLocaleLoad
		Description:
			Load a locale audio as an audio track. Supported format are MP3, FLAC, WAV, Matroska/WebM (AAC, Opus or Vorbis codecs), MP4/M4A (AAC codec), OGG streams (Opus, Vorbis and FLAC codecs), AAC streams and Stream playlists (M3U and PLS)
		Examples:
			discord command locale:
	prefixes: !
	trigger:
		load locale track from "plugins/track.ogg" and store it in {_track}
		if {_track} is not set:
			reply with ":x: **Track not found!**"
			stop
		play {_track} in voice channel of event-member
		Since:
			1.11
		Patterns:
			[disky] load [locale] track from [the] [file] [path] %string% and store (it|the track) in %objects%
	Make Bot Join Voice Channel:
		ID: EffMakeBotJoinVoice
		Description:
			Make the specific bot join a voice channel.
		Examples:
			make bot named "MyBot" join event-channel
		Since:
			1.12
		Patterns:
			[disky] make %bot% join [the] [channel] %channel/voicechannel%
	Make Bot Leave Guild:
		ID: EffMakeBotLeave
		Description:
			Make the specific bot leave the specific guild.
		Examples:
			make bot named "MyBot" leave event-guild
		Since:
			1.8
		Patterns:
			[disky] make [the] [bot] [(named|with name)] %string% leave [the] [guild] %guild%
	Make Webhook Talk:
		ID: EffMakeWebhookTalk
		Description:
			Make a webhook send a specific message, embed or webhook message builder in his channel.
See more information about this on the wiki: https://github.com/SkyCraft78/DiSky/wiki/Webhooks
		Examples:
			make webhook "name" send message "Hello World !"
		Since:
			1.8
		Patterns:
			[disky] make [the] [webhook] [(named|with name)] %string% send [the] [(message|text|webhook message)] %string/webhookmessagebuilder/embed%
	Move Member:
		ID: EffMoveMember
		Description:
			Move a member to another voice channel.
		Examples:
			discord command move <member> <voicechannel>:
	prefixes: !
	trigger:
		reply with mention tag of arg-2
		move arg-1 to arg-2
		Since:
			1.9
		Patterns:
			[disky] move [discord] %member% to [the] [voice] [channel] %channel/voicechannel% [(with|via|using) %-bot%]
	Mute / Unmute Member:
		ID: EffMuteMember
		Description:
			Mute or unmute a member in a guild.
		Examples:
			mute event-member
		Since:
			1.9
		Patterns:
			[disky] mute [discord] %member% [in guild] [(with|via|using) %-bot%]
			[disky] unmute [discord] %member% [in guild] [(with|via|using) %-bot%]
	Pause Guild Audio:
		ID: EffPauseAudio
		Description:
			Pause the current audio a guild is playing.
		Examples:
			discord command pause:
	prefixes: *
	trigger:
		pause in event-guild
		Since:
			1.6
		Patterns:
			[disky] pause [the] [audio] [track] in [the] [guild] %guild%
	Pin / Unpin Message:
		ID: EffPinMessage
		Description:
			Pin or unpin any message from a channel.
		Examples:
			discord command ping <string>:
	prefixes: !
	trigger:
		set {_msg} to message with id arg-1 in event-channel
		if {_msg} is not set:
			reply with "**:x: Can't found that message!**"
			stop
		pin {_msg}
		reply with "**:v: Message pinned!**"
		Since:
			1.6
		Patterns:
			[disky] pin [discord] [message] %message% [in channel]
			[disky] unpin [discord] [message] %message% [in channel]
	Play Audio:
		ID: EffPlayAudio
		Description:
			Play a specific audio track (can be get from search or load locale effects) to a voice channel
		Examples:
			discord command play [<string>]:
	prefixes: *
	aliases: p
	trigger:
		if arg 1 is not set:
			reply with ":x: **You __must__ specify an URL or a YouTube input!**"
			stop
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to join you!**"
			stop
		search in youtube for arg-1 and store it in {_r::*}
		# It mean it's a playlist and not a single track
		if arg-1 contain "list=":
			if {_r::*} is not set:
				reply with ":x: **Can't found that playlist!**"
				stop
			# We play all tracks listed on the playlist inputted
			play {_r::*} in voice channel of event-member
			make embed:
				set author of embed to "Successfully added **%size of {_r::*}% tracks** to your queue!"
				set author icon of embed to avatar of event-member
				set color of embed to orange
				set author url of embed to arg-1
			reply with last embed
		else:
			if {_r::1} is not set:
				reply with ":x: **Can't found anything for the input '%arg-1%'!**"
				stop
			play {_r::1} in voice channel of event-member
			set {_track} to {_r::1}
			make embed:
				set title of embed to "%{_track}%"
				set title url of embed to track url of {_track}
				set color of embed to lime
				set footer of embed to "Executed by %discord name of event-member%"
				set thumbnail of embed to track thumbnail of {_track}
				add "`•` Duration: %track duration of {_track}%" to {_l::*}
				add "`•` Author: %track author of {_track}%" to {_l::*}
				set description of embed to join {_l::*} with nl
			reply with last embed
		Since:
			1.6, 1.9 (rework using search)
		Patterns:
			[disky] play [tracks] %tracks% in [the] [voice] [channel] %voicechannel/channel%
	Purge Amount of Message:
		ID: EffPurgeMessages
		Description:
			Grab all X latest message of a text channel and purge (= delete) them.
		Examples:
			discord command purge [<number>]:
	prefixes: !
	permissions: manage server
	permission message: **:x: You can't use that command!**
	trigger:
		if arg-1 is not set:
			reply with "**:x: You must define an amount!**"
			stop
		purge last arg messages from event-channel
		reply with "**✅ Purged %arg-1% messages!**"
		Since:
			1.5.2
		Patterns:
			[disky] purge [all] last[est] %number% messages from [the] [channel] %channel/textchannel%
	Register Embed Template:
		ID: EffRegisterEmbed
		Description:
			Register a new embed template using an existing template and an id. See also 'make embed using template "ID"' section.
		Since:
			1.7
		Patterns:
			[disky] register [new] [embed] template with [the] [embed] %embed% [and] with [the] (name|id) %string%
	Register Webhooks:
		ID: EffRegisterWebhook
		Description:
			Register a new webhook client, using a specific ID and its url or token.
		Examples:
			register webhook "name" using url "url"
		Since:
			1.8
		Patterns:
			[disky] register [new] [webhook] [(with name|named)] %string% (using|with) [the] [(url|token|id)] %string%
	Register new Discord Bot:
		ID: EffRegisterBot
		Description:
			Register and load a new discord bot from a token and with a specific Name.
You need to follow Discord's developer instruction in order to generate a new bot with a token
		Examples:
			login to "TOKEN" with name "MyBot"
		Since:
			1.0
		Patterns:
			[disky] register [new] [discord] bot with [the] [token] %string% and with [the] (name|id) %string%
			[disky] login to [token] %string% with [the] (name|id) %string%
	Remove Reaction:
		ID: EffRemoveReaction
		Description:
			Remove a specific reaction, from user on message.
		Examples:
			on reaction add:
				remove event-emote added by event-user from event-message
		Since:
			1.3
		Patterns:
			[disky] (remove|delete) %emotes% added by %user/member/bot% from %message%
	Reply To message:
		ID: EffReplyTo
		Description:
			Reply TO a message, using the Discord's reply system.
		Examples:
			reply to event-message with "Hello!"
			reply to event-message with "Hello!" with mentioning false
		Since:
			1.7
		Patterns:
			[disky] reply to [the] [message] %message% (using|with|via) [message] %string/message/messagebuilder/embed% [[with] mention[ing] %-boolean%] [(with|using) %-bot%] [and store (it|the message) in %-object%]
	Reply with Message:
		ID: EffReplyWith
		Description:
			Reply with a message to channel-based events (work with private message too!). You can get the sent message using 'and store it in {_var}' pattern! Personal message only works with INTERACTION (slash commands / webhooks) and will make the message only visible for the user who done the interaction.
		Examples:
			reply with "Hello World :globe_with_meridians:"
			reply with personal message "Only you can see that message :eyes:"
			reply with "Hello World !" and store it in {_msg}
		Since:
			1.0
		Patterns:
			[disky] reply with [(personal|hidden)] [the] [message] %string/message/messagebuilder/embed% [and store it in %-object%]
	Resume Guild Audio:
		ID: EffResumeAudio
		Description:
			Resume the current audio a guild is playing.
		Examples:
			discord command resume:
	prefixes: *
	trigger:
		resume in event-guild
		Since:
			1.6
		Patterns:
			[disky] resume [the] [audio] [track] (in|from) [the] [guild] %guild%
	Retrieve User:
		ID: EffRetrieveUser
		Description:
			Retrieve a user from its ID, and store it in a variable.
		Examples:
			retrieve user with id "388744165443371009" and store it in {_user}
		Since:
			1.13
		Patterns:
			[disky] retrieve [the] user with [the] id %string% and store (it|the user) in %-object%
	Search Audio:
		ID: EffSearch
		Description:
			Search audio track in an audio website (see Audio Site).
		Examples:
			discord command play [<string>]:
	prefixes: *
	aliases: p
	trigger:
		if arg 1 is not set:
			reply with ":x: **You __must__ specify an URL or a YouTube input!**"
			stop
		if voice channel of event-member is not set:
			reply with ":x: **You __must__ be in a voice channel in order to join you!**"
			stop
		search in youtube for arg-1 and store it in {_r::*}
		# It mean it's a playlist and not a single track
		if arg-1 contain "list=":
			if {_r::*} is not set:
				reply with ":x: **Can't found that playlist!**"
				stop
			# We play all tracks listed on the playlist inputted
			play {_r::*} in voice channel of event-member
			make embed:
				set author of embed to "Successfully added **%size of {_r::*}% tracks** to your queue!"
				set author icon of embed to avatar of event-member
				set color of embed to orange
				set author url of embed to arg-1
			reply with last embed
		else:
			if {_r::1} is not set:
				reply with ":x: **Can't found anything for the input '%arg-1%'!**"
				stop
			play {_r::1} in voice channel of event-member
			set {_track} to {_r::1}
			make embed:
				set title of embed to "%{_track}%"
				set title url of embed to track url of {_track}
				set color of embed to lime
				set footer of embed to "Executed by %discord name of event-member%"
				set thumbnail of embed to track thumbnail of {_track}
				add "`•` Duration: %track duration of {_track}%" to {_l::*}
				add "`•` Author: %track author of {_track}%" to {_l::*}
				set description of embed to join {_l::*} with nl
			reply with last embed
		Since:
			1.9
		Patterns:
			[disky] search [in] [[web]site] %audiosite% for [the] [input] %string% and store (it|the results) in %objects%
	Send Typing:
		ID: EffSendTyping
		Description:
			Make a bot "typing" in a text channel. You can enable it one time, and it automatically expire after 10 seconds.
		Examples:
			discord command typing:
	prefixes: %
	trigger:
		send bot typing in event-channel
		Since:
			1.5.2
		Patterns:
			[disky] (make|send) [bot] [%-bot%] typing in [the] [channel] %channel/textchannel%
	Send discord Message:
		ID: EffSendMessage
		Description:
			Send a message in a specific channel, with a specific bot. Use that syntax only for non-textchannel event.
		Examples:
			on load:
	make embed:
		set title of embed to "The bot has been started!"
		set color of embed to green
		set timestamp of embed to now
	send last embed to text channel with id "818182473502294066"
		Since:
			1.0
		Patterns:
			[disky] send [message] %string/message/embed/messagebuilder% to [the] [(user|channel)] %user/member/textchannel/channel% [with [the] %-bot%] [and store it in %-object%]
	Shuffle Guild Queue:
		ID: EffShuffleGuildQueue
		Description:
			Shuffle the current queue of a specific guild.
		Examples:
			shuffle queue of event-guild
		Since:
			1.7
		Patterns:
			[disky] shuffle [current] queue (from|of) [the] [guild] %guild%
	Shutdown Discord Bot:
		ID: EffShutdownBot
		Description:
			Close JDA instance and shutdown the specific bot.
 You can't use it as discord bot after shutdown it!
		Examples:
			shutdown the bot named "MyBot"
		Since:
			1.0
		Patterns:
			[disky] (stop|shutdown|close instance of) %bot%
	Skip Guild Track:
		ID: EffSkipGuildTrack
		Description:
			Skip the track from the specific guild.
		Examples:
			skip current track of event-guild
		Since:
			1.6-pre2, 1.8 (added store pattern)
		Patterns:
			[disky] skip [current] track (from|of) [the] [guild] %guild% [and store (it|the new track) in %-object%]
	Stop Guild Queue:
		ID: EffStopGuildTrack
		Description:
			Stop the current queue and clear it. See also 'pause' effect.
		Examples:
			stop current queue of event-guild
		Since:
			1.9
		Patterns:
			[disky] stop [current] queue (from|of) [the] [guild] %guild%
	Unban Member:
		ID: EffUnbanUser
		Description:
			Unban an user from a specific guild.
		Examples:
			unban user with id "388744165443371009" from event-guild
		Since:
			1.13
		Patterns:
			[disky] unban [the] [user] %user% from [the] [guild] %guild%
	Upload File:
		ID: EffUploadFile
		Description:
			Upload a file from an URL to a channel or a private user. If SkImage is installed, you can also send an image directly.
		Examples:
			discord command upload [<text>] [<text>]:
	prefixes: *
	trigger:
		if arg-1 is not set:
			upload "https://media.discordapp.net/attachments/818182473502294072/834832709061967913/image.png?width=1440&height=648" to event-channel
			stop
		if arg-2 is not set:
			upload arg-1 to event-channel
			stop
		upload arg-1 with content arg-2 to event-channel
		Since:
			1.4, 1.10 (added locale files & custom content)
		Patterns:
			[disky] upload [file] %string% [(with name|named) %-string%] [with [the] [content] %-string/embed/messagebuilder%] to [the] [(channel|user)] %channel/textchannel/user/member% [with %-bot%] [and store it in %-object%]
Expressions:
	Attachments File Extension:
		ID: ExprAttFileExt
		Description:
			Get the file extension of an attachment.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] file ext[ension] of %attachment%
			%attachment%'[s] [discord] file ext[ension]
	Attachments File Name:
		ID: ExprAttFileName
		Description:
			Get the file name of an attachment.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] file name of %attachment%
			%attachment%'[s] [discord] file name
	Attachments URL:
		ID: ExprAttURL
		Description:
			Get the url of an attachment.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [attachment] ur(l|i) of %attachment%
			%attachment%'[s] [discord] [attachment] ur(l|i)
	Author of Message:
		ID: ExprMessageAuthor
		Description:
			Return the author (user) of a message instance.
		Examples:
			set {_author} to discord author of event-message
		Since:
			1.0
		Return type: Discord User
		Changers:
			none
		Patterns:
			[disky] [the] (user|author) of [the] [message] %message%
	Avatar of user / member / webhook / bot:
		ID: ExprAvatarOf
		Description:
			Get user, webhook, bot, member avatar url, and set only webhook and guild ones.
		Examples:
			set avatar of last webhook to "https://image.jeuxvideo.com/medias-md/158685/1586849646-1530-card.jpg"
		Since:
			1.2
		Return type: Text
		Changers:
			set
		Patterns:
			[the] [discord] avatar of %user/member/guild/webhookmessagebuilder/bot%
			%user/member/guild/webhookmessagebuilder/bot%'[s] [discord] avatar
	Bitrate of Voice Channel:
		ID: ExprVoiceBitrate
		Description:
			Get or set the bitrate of a voice chanenl (or builder)
		Examples:
			set bitrate of voice channel to 8000
		Since:
			1.6
		Return type: Number
		Changers:
			set
		Patterns:
			[the] bitrate of %voicechannel/voicechannelbuilder/channel%
			%voicechannel/voicechannelbuilder/channel%'[s] bitrate
	Bot:
		ID: ExprJDA
		Description:
			Return  bot object using the bot name.
		Examples:
			set {_bot} to bot named "MyBot"
		Since:
			1.0
		Return type: Discord Bot
		Changers:
			none
		Patterns:
			[disky] [the] bot [(named|with name)] %string%
	Button Content:
		ID: ExprButtonContent
		Description:
			Change the content of a button builder. Use the 'button emote' for managing emote!
		Examples:
			set button content of button to "Hello World :D"
		Since:
			1.12
		Return type: Text
		Changers:
			set
		Patterns:
			[the] [discord] [button] (content|text) of %button%
			%button%'[s] [discord] [button] (content|text)
	Button Emoji:
		ID: ExprButtonEmote
		Description:
			Change the emote of a button. It DOESN'T work with a CUSTOM emote!
		Examples:
			set button emote of button to "⚠️"
		Since:
			1.12
		Return type: Text
		Changers:
			set
		Patterns:
			[the] [discord] [button] (emote|emoji) of %button%
			%button%'[s] [discord] [button] (emote|emoji)
	Button Style:
		ID: ExprButtonStyle
		Description:
			Change the style of a button. Check 'buttonstyle' type for more information.
		Examples:
			set button style of button to danger
		Since:
			1.12
		Return type: Button Style
		Changers:
			set
		Patterns:
			[the] [discord] [button] style of %button%
			%button%'[s] [discord] [button] style
	Category / Channel / Role Position:
		ID: ExprCategoryPosition
		Description:
			Get or set the position of a category, channel, role or their builder.
		Examples:
			set position of category builder to 5
		Since:
			1.4.1
		Return type: Number
		Changers:
			set
		Patterns:
			[the] [discord] [category] position of %category/categorybuilder/role/channel%
			%category/categorybuilder/role/channel%'[s] [discord] [category] position
	Category Parent of a text / voice channel (or builder):
		ID: ExprCategoryParent
		Description:
			Get or set the parent of text / voice channel or builder.
		Examples:
			set parent of text channel builder to category with id "818182471442890769"
		Since:
			1.4
		Return type: Category
		Changers:
			set
		Patterns:
			[the] [text] [channel] parent of %channel/textchannel/textchannelbuilder/voicechannel/voicechannelbuilder%
			%channel/textchannel/textchannelbuilder/voicechannel/voicechannelbuilder%'[s] [text] [channel] parent
	Category from ID:
		ID: ExprFIDCategory
		Description:
			Return a category from its id.
		Examples:
			set {_cat} to category with id "731885527762075648"
		Since:
			1.11
		Return type: Category
		Changers:
			none
		Patterns:
			[disky] category with [the] id %string%
	Channel from ID:
		ID: ExprFIDChannel
		Description:
			Return a guild channel from its id.
		Examples:
			set {_cha} to channel with id "731885527762075648"
		Since:
			1.11
		Return type: Guild Channel
		Changers:
			none
		Patterns:
			[disky] [guild] channel with [the] id %string%
	Color from Hex:
		ID: ExprColorFromHex
		Description:
			Return a java.awt Color from hexadecimal code (can be used in embed). Don't add the # into the code!
		Examples:
			set color of embed to color from hex "d99400"
		Since:
			1.3
		Return type: Object
		Changers:
			none
		Patterns:
			[disky] [the] color from hex[adecimal] [code] %string%
	Color from RGB:
		ID: ExprColorFromRGB
		Description:
			Return a java.awt Color (to use in embed) from red, green and blue amount.
		Examples:
			set color of embed to color from rgb 255, 30, 126
		Since:
			1.3
		Return type: Object
		Changers:
			none
		Patterns:
			[disky] [the] color from rgb %number%[ ][,][ ]%number%[ ][,][ ]%number%
	Color of member, embed, role or builder:
		ID: ExprColorOf
		Description:
			Get or set the color of a role, embed, builder...
Can only GET the color of a MEMBER!
You can use any other color expression (from other addon too) as soon as the object's type return is java.awt.Color
		Examples:
			set color of embed to red
		Since:
			1.4
		Return type: Object
		Changers:
			set
		Patterns:
			[the] [discord] [(role|embed|builder|member)] colo[u]r of %role/rolebuilder/embed/member%
			%role/rolebuilder/embed/member%'[s] [discord] [(role|embed|builder|member)] colo[u]r
	Content of Message (or Webhook Message Builder:
		ID: ExprMessageContent
		Description:
			Return the content (message itself) of a message instance.
		Examples:
			set {_content} to message content of event-message
		Since:
			1.0, 1.8 (Webhook message builder)
		Return type: Text
		Changers:
			set
		Patterns:
			[the] [the] [message] content of %message/webhookmessagebuilder%
			%message/webhookmessagebuilder%'[s] [the] [message] content
	Custom Status:
		ID: ExprCustomStatus
		Description:
			Get a member custom status.
		Examples:
			if custom status of event-member contain "https://" # For anti-URL
		Since:
			1.6
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] custom status of %member%
			%member%'[s] [discord] custom status
	Default Bot Prefix:
		ID: ExprBotPrefix
		Description:
			Get, set or clear the default prefix of a bot. This prefix will be added to every prefixes in commands.
		Examples:
			set default prefix of event-bot to "."
		Since:
			1.9
		Return type: Text
		Changers:
			set
		Patterns:
			[the] [bot] [default] prefix of %string/bot%
			%string/bot%'[s] [bot] [default] prefix
	Discord Command Aliases:
		ID: ExprCommandAliases
		Description:
			Get aliases of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[all] [the] [discord] [command] aliases of %discordcommand%
			[all] [the] %discordcommand%'[s] [discord] [command] aliases
	Discord Command Category:
		ID: ExprCommandCategory
		Description:
			Get the (custom) category of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [command] [custom] category of %discordcommand%
			%discordcommand%'[s] [discord] [command] [custom] category
	Discord Command Description:
		ID: ExprCommandDescription
		Description:
			Get the description of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [command] desc[ription] of %discordcommand%
			%discordcommand%'[s] [discord] [command] desc[ription]
	Discord Command Executable In:
		ID: ExprCommandExecutableIn
		Description:
			Get executable in of a discord command. (guild or direct message)
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [command] executable (state|in) [value] of %discordcommand%
			%discordcommand%'[s] [discord] [command] executable (state|in) [value]
	Discord Command Name:
		ID: ExprCommandName
		Description:
			Get the name of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [command] name of %discordcommand%
			%discordcommand%'[s] [discord] [command] name
	Discord Command Permission Message:
		ID: ExprCommandPermMessage
		Description:
			Get the permission message of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [command] [custom] perm[ission] (msg|message) of %discordcommand%
			%discordcommand%'[s] [discord] [command] [custom] perm[ission] (msg|message)
	Discord Command Permissions:
		ID: ExprCommandPermissions
		Description:
			Get permissions of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[all] [the] [discord] [command] permission[s] of %discordcommand%
			[all] [the] %discordcommand%'[s] [discord] [command] permission[s]
	Discord Command Prefixes:
		ID: ExprCommandPrefixes
		Description:
			Get prefixes of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[all] [the] [discord] [command] prefixes of %discordcommand%
			[all] [the] %discordcommand%'[s] [discord] [command] prefixes
	Discord Command Roles:
		ID: ExprCommandRoles
		Description:
			Get roles of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[all] [the] [discord] [command] roles of %discordcommand%
			[all] [the] %discordcommand%'[s] [discord] [command] roles
	Discord Command Usage:
		ID: ExprCommandUsage
		Description:
			Get the usage of a discord command.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [command] usage of %discordcommand%
			%discordcommand%'[s] [discord] [command] usage
	Discord Entity from ID:
		ID: ExprFromName
		Description:
			Return a discord entity such as channel, role, category, etc... from its name.
We highly DON'T recommend use that method to get entity. Use "from id" expression!
		Examples:
			set {_channel} to channel named "epic-channel"
		Since:
			1.5.1
		Return type: Object
		Changers:
			none
		Patterns:
			[disky] text[ ][-][ ]channel (named|with name) %string%
			[disky] voice[ ][-][ ]channel (named|with name) %string%
			[disky] (user|member) (named|with name) %string%
			[disky] (guild|server) (named|with name) %string%
			[disky] [guild] role (named|with name) %string%
			[disky] category (named|with name) %string%
	Embed Author:
		ID: ExprEmbedAuthor
		Description:
			Set or clear the author of an embed
		Examples:
			set author of {_embed} to "ItsTheSky"
			clear author of {_embed}
		Since:
			1.4.3
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] author of %embed%
			%embed%'[s] [embed] author
	Embed Author Icon:
		ID: ExprEmbedAuthorIcon
		Description:
			Set or clear the author icon of an embed
		Examples:
			set author icon of {_embed} to "https://www.youtube.com/watch?v=ynTrFZbrAl8"
			clear author icon of {_embed}
		Since:
			1.4.3
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] author icon of %embed%
			%embed%'[s] [embed] author icon
	Embed Author URL:
		ID: ExprEmbedAuthorURL
		Description:
			Set or clear the author url of an embed
		Examples:
			set author url of {_embed} to "https://www.youtube.com/watch?v=ynTrFZbrAl8"
			clear author url of {_embed}
		Since:
			1.4.3
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] author url of %embed%
			%embed%'[s] [embed] author url
	Embed Footer:
		ID: ExprEmbedFooter
		Description:
			Set or clear the footer of an embed
		Examples:
			set footer of {_embed} to "Bot made by AUTHOR"
			clear footer of {_embed}
		Since:
			1.0
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] footer of %embed%
			%embed%'[s] [embed] footer
	Embed Footer Icon:
		ID: ExprEmbedFooterIcon
		Description:
			Set or clear the footer icon of an embed
		Examples:
			set footer icon of {_embed} to "https://www.youtube.com/watch?v=ynTrFZbrAl8"
			clear footer icon of {_embed}
		Since:
			1.4.3
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] footer icon of %embed%
			%embed%'[s] [embed] footer icon
	Embed Image:
		ID: ExprEmbedImage
		Description:
			Set or clear the image of an embed.
		Examples:
			set image of {_embed} to "https://d1fmx1rbmqrxrr.cloudfront.net/cnet/optim/i/edit/2019/04/eso1644bsmall__w770.jpg"
			clear image of {_embed}
		Since:
			1.0
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] (image|img) of %embed%
			%embed%'[s] [embed] (image|img)
	Embed Thumbnail:
		ID: ExprEmbedThumbnail
		Description:
			Set or clear the thumbnail of an embed.
		Examples:
			set thumbnail of {_embed} to "https://d1fmx1rbmqrxrr.cloudfront.net/cnet/optim/i/edit/2019/04/eso1644bsmall__w770.jpg"
			clear thumbnail of {_embed}
		Since:
			1.0
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] (thumbnail|tb) of %embed%
			%embed%'[s] [embed] (thumbnail|tb)
	Embed TimeStamp:
		ID: ExprEmbedTimeStamp
		Description:
			Set or clear the timestamp of an embed.
		Examples:
			set timestamp of embed to now
			clear timestamp of embed
		Since:
			1.1
		Return type: Date
		Changers:
			set
			reset
		Patterns:
			[the] [embed] timestamp of %embed%
			%embed%'[s] [embed] timestamp
	Embed Title URL:
		ID: ExprEmbedTitleURL
		Description:
			Set or clear the title url of an embed.
		Examples:
			set title url of {_embed} to "The addon's developer link"
			clear title url of {_embed}
		Since:
			1.4.3
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [embed] title url of %embed%
			%embed%'[s] [embed] title url
	Embed or Slash Command Description:
		ID: ExprEmbedDescription
		Description:
			Set or clear the description of an embed or a slash command. Use %nl% to make new line in the description.
		Examples:
			set desc of {_embed} to "This is the better description I ever saw :joy:"
			clear desc of {_embed}
			set description of command to "This is an awesome command!"
		Since:
			1.0
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[all] [the] [(embed|command)] (desc|description) of %embed/commandbuilder%
			[all] [the] %embed/commandbuilder%'[s] [(embed|command)] (desc|description)
	ExprEventValues:
		ID: ExprEventValues
		Return type: Object
		Changers:
			unknown
		Patterns:
			event-%*classinfo%
	ExprUpdatedValue:
		ID: ExprUpdatedValue
		Return type: Object
		Changers:
			unknown
		Patterns:
			[the] new <.+>
			[the] old <.+>
	Gateway Ping of Bot:
		ID: ExprPing
		Description:
			Return the ping of the link between the bot and the Discord API
		Examples:
			set {_ping} to ping of bot named "MyBot"
		Since:
			1.4.2
		Return type: Number
		Changers:
			none
		Patterns:
			[disky] [the] [(gateway|rest)] ping of [the] %bot%
	Guild Banned USer:
		ID: ExprGuildBanned
		Description:
			Return all users who are currently banned from a specific guild.
		Examples:
			reply with "This server have %size of banned user of event-guild% banned user!"
		Since:
			1.3
		Return type: Discord User
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] ban[ned] user[s] of [the] [guild] %guild%
	Guild Banner:
		ID: ExprGuildBanner
		Description:
			Return the banner URL of the specific guild
		Examples:
			reply with "Banner URL: %banner url of event-guild%"
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] banner [url] of [the] [guild] %guild%
	Guild Boost Tier:
		ID: ExprBoostTier
		Description:
			Return the boost tier (1, 2 or 3) of specific guild
		Examples:
			reply with "Guild tier: %boost tier of event-guild%"
		Since:
			1.2
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] boost tier of [the] [guild] %guild%
	Guild Booster Role:
		ID: ExprBoosterRole
		Description:
			Return the booster role of specific guild
		Examples:
			reply with "Say thanks to %mention tag of booster role of event-guild%"
		Since:
			1.2
		Return type: Discord Role
		Changers:
			none
		Patterns:
			[disky] [the] [discord] booster role of [the] [guild] %guild%
	Guild Boosters:
		ID: ExprBoosters
		Description:
			Return all boosters of the guilds
		Examples:
			set {_boosters::*} to boosters of event-guild
		Since:
			1.2
		Return type: Discord Member
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [member] boosters of [the] [guild] %guild%
	Guild Boosts Amount:
		ID: ExprGuildRegion
		Description:
			Return the boost amount of specific guild
		Examples:
			reply with "This server got %boost amount of event-guild% boosts!"
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] guild region of [the] [guild] %guild%
	Guild Boosts Amount:
		ID: ExprBoostAmount
		Description:
			Return the boost amount of specific guild
		Examples:
			reply with "This server got %boost amount of event-guild% boosts!"
		Since:
			1.2
		Return type: Number
		Changers:
			none
		Patterns:
			[disky] [the] [discord] boosts amount of [the] [guild] %guild%
	Guild Category:
		ID: ExprGuildCategory
		Description:
			Return all category of the specific guild
		Examples:
			reply with "This server have %size of category of event-guild% categories!!"
		Since:
			1.6
		Return type: Category
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] category of [the] [guild] %guild%
	Guild Channels:
		ID: ExprGuildChannels
		Description:
			Return all channels (both text & voice) of the specific guild
		Examples:
			reply with "This server have %size of textchannels of event-guild% text channels!"
		Since:
			1.3
		Return type: Text Channel
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] (textchannels|channels) of [the] [guild] %guild%
	Guild Date Creation:
		ID: ExprGuildCreation
		Description:
			Return the date when the guild were created.
		Examples:
			reply with "This guild was made in %creation date of event-guild%"
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] creation date of [the] [guild] %guild%
	Guild Depth:
		ID: ExprGuildDepth
		Description:
			Get or change the audio depth of a guild. MUST be between 0.1 AND 0.9 (default is 0.001)
		Examples:
			discord command depth [<number>]:
	prefixes: *
	trigger:
		if arg 1 is not set:
			reply with ":deer: **Current __depth__: `%depth of event-guild%`**"
			stop
		set depth of event-guild to arg-1
		reply with ":deer: **The __depth__ has been changed to `%depth of event-guild%` !**"
		Since:
			1.7
		Return type: Number
		Changers:
			add
			set
			remove
		Patterns:
			[the] [discord] [audio] [guild] depth of %guild%
			%guild%'[s] [discord] [audio] [guild] depth
	Guild Emotes:
		ID: ExprGuildEmotes
		Description:
			Return all emotes of the specific guild
		Examples:
			reply with "This server have %size of emotes of event-guild% emotes!"
		Since:
			1.3
		Return type: Discord Emote
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] emotes of [the] [guild] %guild%
	Guild Frequency:
		ID: ExprGuildFrequency
		Description:
			Get or change the audio frequency of a guild. MUST be bigger than 0 (default is 0.01)
		Examples:
			set frequency of event-guild to 0.1
		Since:
			1.11
		Return type: Number
		Changers:
			add
			set
			remove
		Patterns:
			[the] [discord] audio [guild] frequency of %guild%
			%guild%'[s] [discord] audio [guild] frequency
	Guild Invites:
		ID: ExprGuildInvites
		Description:
			Return all invites of the guilds
		Examples:
			set {_invites::*} to invites of event-guild
		Since:
			1.3
		Return type: Discord Invite
		Changers:
			none
		Patterns:
			[disky] [the] [discord] invite[s] of [the] [guild] %guild%
	Guild Members:
		ID: ExprGuildMembers
		Description:
			Return all members of the guilds
		Examples:
			set {_members::*} to members of event-guild
		Since:
			1.3
		Return type: Discord Member
		Changers:
			none
		Patterns:
			[disky] [the] [discord] members of [the] [guild] %guild%
	Guild Owner:
		ID: ExprGuildOwner
		Description:
			Return the owner of the specific guild
		Examples:
			reply with mention tag of owner of event-guild
		Since:
			1.3
		Return type: Discord Member
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] owner of [the] [guild] %guild%
	Guild Pitch:
		ID: ExprGuildPitch
		Description:
			Get or change the audio pith of a guild.
		Examples:
			discord command pitch [<number>]:
	prefixes: *
	trigger:
		if arg 1 is not set:
			reply with ":musical_note: **Current __pitch__: `%audio pitch of event-guild%`**"
			stop
		set audio pitch of event-guild to arg-1
		reply with ":musical_note: **The __pitch__ has been changed to `%audio pitch of event-guild%` !**"

		Since:
			1.7
		Return type: Number
		Changers:
			add
			set
			remove
		Patterns:
			[the] [discord] audio [guild] pitch of %guild%
			%guild%'[s] [discord] audio [guild] pitch
	Guild Queue:
		ID: ExprBotQueue
		Description:
			Return all tracks from a specific guild.
		Examples:
			set {_tracks::*} to queue of event-guild
		Since:
			1.6-pre2
		Return type: Audio Track
		Changers:
			none
		Patterns:
			[all] [the] [discord] [audio] queue of %guild%
			[all] [the] %guild%'[s] [discord] [audio] queue
	Guild Roles:
		ID: ExprGuildRoles
		Description:
			Return all roles of the specific guild
		Examples:
			reply with "This server have %size of roles of event-guild% roles!!"
		Since:
			1.6
		Return type: Discord Role
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] role[s] of [the] [guild] %guild%
	Guild Speed:
		ID: ExprGuildSpeed
		Description:
			Get or change the speed of a guild. (Of course, the audio speed)
		Examples:
			discord command speed [<number>]:
	prefixes: *
	trigger:
		if arg 1 is not set:
			reply with ":cloud_tornado: **Current __speed__: `%speed of event-guild%`**"
			stop
		set guild speed of event-guild to arg-1
		reply with ":cloud_tornado: **The __speed__ has been changed to `%guild speed of event-guild%` !**"
		Since:
			1.7
		Return type: Number
		Changers:
			add
			set
			remove
		Patterns:
			[the] [discord] [audio] [guild] speed of %guild%
			%guild%'[s] [discord] [audio] [guild] speed
	Guild Text Channels:
		ID: ExprGuildTextChannels
		Description:
			Return all text channels of the guilds
		Examples:
			set {_channels::*} to text channels of event-guild
		Since:
			1.3
		Return type: Text Channel
		Changers:
			none
		Patterns:
			[disky] [the] [discord] text[ ]channel[s] of [the] [guild] %guild%
	Guild Verification Level:
		ID: ExprGuildVerification
		Description:
			Return the verification level of a specific gui
		Examples:
			reply with "Verification level: %verification level of event-guild%"
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] [guild] verification level of [the] [guild] %guild%
	Guild Voice Channels:
		ID: ExprGuildVoiceChannels
		Description:
			Return all voice channels of the guilds
		Examples:
			set {_voice::*} to voice channels of event-guild
		Since:
			1.6
		Return type: Voice Channel
		Changers:
			none
		Patterns:
			[disky] [the] [discord] voice[ ]channel[s] of [the] [guild] %guild%
	Guild Volume:
		ID: ExprGuildVolume
		Description:
			Get or change the volume of a guild.
		Examples:
			discord command volume [<number>]:
	prefixes: *
	trigger:
		if arg 1 is not set:
			reply with ":speaking_head: **Current __volume__: `%volume of event-guild%`**"
			stop
		set {_old} to volume of event-guild
		set volume of event-guild to arg-1
		reply with ":speaking_head: **The __volume__ has been changed: `%{_old}%` -> `%volume of event-guild%`**"
		Since:
			1.6-pre2
		Return type: Number
		Changers:
			add
			set
			remove
		Patterns:
			[the] [discord] [audio] [guild] volume of %guild%
			%guild%'[s] [discord] [audio] [guild] volume
	Guild from ID:
		ID: ExprFIDGuild
		Description:
			Return a guild from its id.
		Examples:
			set {_guild} to guild with id "731885527762075648"
		Since:
			1.11
		Return type: Discord Guild (Server)
		Changers:
			none
		Patterns:
			[disky] (guild|server) with [the] id %string%
	Guild of Discord entity:
		ID: ExprGuildOf
		Description:
			Get the guild of a discord entity (channel, member, message, etc...)
		Examples:
			guild of event-member
		Since:
			1.8
		Return type: Discord Guild (Server)
		Changers:
			none
		Patterns:
			[the] [discord] guild of [discord] [entity] %member/textchannel/message/voicechannel/role/channel/category%
	Guilds of Bot:
		ID: ExprGuilds
		Description:
			Return all guilds of a specific guild.
		Examples:
			set {_guilds::*} to guilds of bot named "MyBot"
		Since:
			1.9
		Return type: Discord Guild (Server)
		Changers:
			none
		Patterns:
			[disky] [the] guilds [instance] of [the] %bot%
	ID of Discord entity:
		ID: ExprIdOf
		Description:
			Return the discord ID of a channel, user, member, role, guild, etc...
		Examples:
			set {_id} to discord id of event-button
		Since:
			1.0
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] id of [the] [discord] [entity] %string/role/user/member/bot/button/emote/textchannel/voicechannel/channel/message/guild%
	Invite Code:
		ID: ExprInviteCode
		Description:
			Get the code of a discord invite.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [invite] [url] code of %invite%
			%invite%'[s] [discord] [invite] [url] code
	Invite Max Age:
		ID: ExprInviteMaxAge
		Description:
			Get the max age of a discord invite.
		Since:
			1.7
		Return type: Timespan
		Changers:
			set
		Patterns:
			[the] [discord] [invite] max (age|date) of %invite/invitebuilder%
			%invite/invitebuilder%'[s] [discord] [invite] max (age|date)
	Invite Max Uses:
		ID: ExprInviteMaxUses
		Description:
			Get the amount of max uses of a discord invite.
		Since:
			1.7
		Return type: Number
		Changers:
			set
		Patterns:
			[the] [discord] [invite] max[imum] use[s] of %invite/invitebuilder%
			%invite/invitebuilder%'[s] [discord] [invite] max[imum] use[s]
	Invite URL:
		ID: ExprInviteURL
		Description:
			Get the url of a discord invite.
		Since:
			1.7
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [invite] ur(l|i) of %invite%
			%invite%'[s] [discord] [invite] ur(l|i)
	Invite User:
		ID: ExprInviteUser
		Description:
			Get the user creator of a discord invite.
		Since:
			1.7
		Return type: Discord User
		Changers:
			none
		Patterns:
			[the] [discord] [invite] (user|inviter|creator) of %invite%
			%invite%'[s] [discord] [invite] (user|inviter|creator)
	Invite Uses:
		ID: ExprInviteUses
		Description:
			Get the amount of uses of a discord invite.
		Since:
			1.7
		Return type: Number
		Changers:
			none
		Patterns:
			[the] [discord] [invite] [url] use[s] of %invite%
			%invite%'[s] [discord] [invite] [url] use[s]
	Is Message Edited:
		ID: ExprIsMessageEdited
		Description:
			See if a message was edited or not.
		Examples:
			if event-message was edited:	reply with "This message has been edited!"
		Since:
			1.0
		Return type: Boolean
		Changers:
			none
		Patterns:
			[disky] %message% (is|was) edited
	Is Message Pinned:
		ID: ExprIsMessagePinned
		Description:
			See if a message is pinned or not.
		Examples:
			if event-message is pinned:	reply with "Nobody reads pinned messages anyway."
		Since:
			1.0
		Return type: Boolean
		Changers:
			none
		Patterns:
			[disky] %message% (is|was) pin[ned]
	Is Message a Webhook:
		ID: ExprIsMessageWebhook
		Description:
			See if a message was edited or not.
		Examples:
			if event-message is a webhook:	reply with "This message has been edited!"
		Since:
			1.0
		Return type: Boolean
		Changers:
			none
		Patterns:
			[disky] %message% (is|was) [a] webhook [message]
			[disky] %message% (isn't|is not|wasn't|was not) [a] webhook [message]
	Is a bot loaded:
		ID: ExprIsLoaded
		Description:
			See if a specific bot is loaded on the server or not.
		Examples:
			if bot "name" is loaded:
		Since:
			1.4
		Return type: Boolean
		Changers:
			none
		Patterns:
			[disky] [bot] [(with name|named)] %string/bot% (is|was) (loaded|online) [on the server]
			[disky] [bot] [(with name|named)] %string/bot% (isn't|is not|wasn't|was not) (loaded|online) [on the server]
	JumpURL of Message:
		ID: ExprMessageJumpURL
		Description:
			Return the jump URL of a message instance.
		Examples:
			set {_url} to discord link of event-message
		Since:
			1.0
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] (jump[ ]url|link|url) of [the] [message] %message%
	Last Argument:
		ID: ExprArgument
		Description:
			Get an argument in a discord command builder.
		Return type: Object
		Changers:
			unknown
		Patterns:
			[][the] last arg[ument][s]
			[][the] arg[ument][s](-| )<(\d+)>
			[][the] <(\d*1)st|(\d*2)nd|(\d*3)rd|(\d*[4-90])th> arg[ument][s]
			[][the] arg[ument][s]
			[][the] %*classinfo%( |-)arg[ument][( |-)<\d+>]
			[][the] arg[ument]( |-)%*classinfo%[( |-)<\d+>]
	Last Button Builder:
		ID: ExprLastButtonBuilder
		Description:
			Return the last used button builder.
		Since:
			1.12
		Return type: Message Button
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] button [builder]
	Last Category Builder:
		ID: ExprLastCategoryBuilder
		Description:
			Return the last used category builder.
		Since:
			1.4.1
		Return type: Category Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] category [builder]
	Last Channel Builder:
		ID: ExprLastChannelBuilder
		Description:
			Return the last used channels builder.
		Since:
			1.4
		Return type: TextChannel Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] text channel [builder]
	Last Command Builder:
		ID: ExprLastCommandBuilder
		Description:
			Return the last used command builder.
		Since:
			1.5
		Return type: Command Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] [slash] command [builder]
	Last DiSky error:
		ID: ExprLastDiSkyError
		Description:
			Get the last disky error.
		Examples:
			last disky error
		Since:
			1.8
		Return type: Text
		Changers:
			none
		Patterns:
			[the] last disky error
	Last Embed:
		ID: ExprLastEmbed
		Description:
			This expression returns the last generated embed using the embed builder.
		Since:
			1.0
		Return type: Embed
		Changers:
			none
		Patterns:
			[the] [last] [(made|created|generated)] embed
	Last Invite Builder:
		ID: ExprLastInviteBuilder
		Description:
			Return the last used invite builder.
		Since:
			1.7
		Return type: Invite Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] invite [builder]
	Last Message:
		ID: ExprLastMessage
		Description:
			This expression returns the last message sent by the reply or send effect.
		Since:
			1.2
		Return type: Discord Message
		Changers:
			none
		Patterns:
			[the] last [sent] message
	Last Role Builder:
		ID: ExprLastRoleBuilder
		Description:
			Return the last used role builder.
		Since:
			1.4
		Return type: Role Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] role [builder]
	Last Voice Channel Builder:
		ID: ExprLastVoiceBuilder
		Description:
			Return the last used voice channels builder.
		Since:
			1.6
		Return type: Voice Channel Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] voice channel [builder]
	Last Webhook Message Builder:
		ID: ExprLastWebhookMessageBuilder
		Description:
			Return the last used webhook message builder.
		Since:
			1.8
		Return type: Webhook Message Builder
		Changers:
			none
		Patterns:
			[the] [last] [(generated|created)] webhook [(msg|message)] [builder]
	Link State of Button:
		ID: ExpLinkState
		Description:
			Get or set the link state of a button. If it's a link, the design will change ro primary & will add a small link icon on the right.
		Examples:
			set link state of button to true
		Since:
			1.4
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] link state of %button%
			%button%'[s] link state
	Max User of Voice Channel:
		ID: ExprMaxUser
		Description:
			Get or set the max user amount of a voice chanenl (or builder)
		Examples:
			set max users of voice channel to 20
		Since:
			1.6
		Return type: Number
		Changers:
			set
		Patterns:
			[the] max user[s] of %voicechannel/voicechannelbuilder/channel%
			%voicechannel/voicechannelbuilder/channel%'[s] max user[s]
	Member Boost State:
		ID: ExprMemberIsNitro
		Description:
			Return if a member boost the guild or not.
		Examples:
			discord command isBooster <member>:
	prefixes: !
	trigger:
		if arg-1 is a booster:
			reply with ":v: Yay! %mention tag of arg 1% is boosting the server, say a big thanks :heart:"
		else:
			reply with ":x: Oh no, %mention tag of arg 1% is not boosting the server! What a bad guy :<"
		Since:
			1.5.3
		Return type: Boolean
		Changers:
			none
		Patterns:
			[disky] [the] [discord] boost[ing] state of [the] [member] %member%
			[disky] [the] [member] %member% is [a] boost[er]
	Member Boosted Date:
		ID: ExprMemberBoostedDate
		Description:
			Return the date of the boosted member.
		Examples:
			boosted date of event-user
		Since:
			1.6
		Return type: Date
		Changers:
			none
		Patterns:
			[disky] [discord] boosted date of [the] [member] %member%
	Member Custom Status:
		ID: ExprMemberCustomStatus
		Description:
			Return the custom status of a specific member
		Examples:
			reply with "I love your %custom status of event-member% status!"
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] custom status of [the] [member] %member%
	Member Highest Role:
		ID: ExprMemberHighestRole
		Description:
			Return the highest role of a member, or none if he doesn't have any roles.
		Examples:
			set {_r} to highest role of event-member
		Since:
			1.5.3
		Return type: Discord Role
		Changers:
			none
		Patterns:
			[disky] [the] [discord] (highest|first) role of [the] [member] %member%
	Member Join Date:
		ID: ExprMemberJoinDate
		Description:
			Return the date of the joining of member.
		Examples:
			join date of event-user
		Since:
			1.6
		Return type: Date
		Changers:
			none
		Patterns:
			[disky] [discord] join date of [the] [member] %member%
	Member Mutual Guild:
		ID: ExprMemberMutual
		Description:
			Return all mutual guilds of specific member
		Examples:
			reply with "We are both in %size of mutual guilds of event-member%" guilds!
		Since:
			1.3
		Return type: Discord Guild (Server)
		Changers:
			none
		Patterns:
			[disky] [the] [discord] mutual guild[s] of [the] [member] %member%
	Member Voice Channel:
		ID: ExprMemberVoiceChannel
		Description:
			Get the voice channel where the member currently is in. Must specify the guild if you're using the bot pattern.
		Since:
			1.6
		Return type: Voice Channel
		Changers:
			none
		Patterns:
			[disky] [discord] [voice] channel of [the] [(member|bot)] %member/bot% [in [the] [guild] %-guild%]
	Member from ID:
		ID: ExprFIDMember
		Description:
			Return a Member from its id. Can specify a guild, which will take a lot less time.
		Examples:
			set {_member} to member with id "731885527762075648" in guild with id "731885527762075648"
		Since:
			1.11
		Return type: Discord Member
		Changers:
			none
		Patterns:
			[disky] Member with [the] id %string% [in [the] [guild] %-guild%]
	Members of Voice Channel:
		ID: ExprMembersVoice
		Description:
			Get all current members of a voice channel.
		Examples:
			members of voice channel with id "818182473502294073"
		Since:
			1.10
		Return type: Discord Member
		Changers:
			none
		Patterns:
			members (in|of) [the] [voice] [channel] %channel/voicechannel%
	Mention State of a role (or builder):
		ID: ExprMentionState
		Description:
			Get or set the mentionable state of a role or builder.
		Examples:
			set mentionable state of role to true
		Since:
			1.4
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] mentionable state of %role/rolebuilder%
			%role/rolebuilder%'[s] mentionable state
	Mention Tag of Discord entity:
		ID: ExprMentionTag
		Description:
			Return the mention tag (@me) from a channel, user, role, etc...
		Examples:
			reply with mention tag of event-user
		Since:
			1.1
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] mention [tag] of [the] [discord] [entity] %role/emote/user/bot/member/channel/textchannel%
	Mentioned Channels:
		ID: ExprMessageMentionedChannels
		Description:
			Return all (text) channels which are mentioned in a message.
		Examples:
			set {_channels::*} to mentioned channels in event-message
		Since:
			1.4.2
		Return type: Text Channel
		Changers:
			none
		Patterns:
			[disky] [the] mentioned [text] channel[s] of [the] [message] %message%
	Mentioned Roles:
		ID: ExprMessageMentionedRoles
		Description:
			Return all roles which are mentioned in a message.
		Examples:
			set {_roles::*} to mentioned roles in event-message
		Since:
			1.4.2
		Return type: Discord Role
		Changers:
			none
		Patterns:
			[disky] [the] mentioned role[s] in [the] [message] %message%
	Mentioned Users:
		ID: ExprMessageMentionedUsers
		Description:
			Return all users who are mentioned in a message.
		Examples:
			set {_users::*} to mentioned users in event-message
		Since:
			1.4.2
		Return type: Discord Member
		Changers:
			none
		Patterns:
			[disky] [the] mentioned (users|members) in [the] [message] %message%
	Message Attachments:
		ID: ExprMessageAttachments
		Description:
			Retrieve every attachments a message have.
		Examples:
			set {_a::*} to attachments of event-message
		Since:
			1.7
		Return type: Message Attachment
		Changers:
			none
		Patterns:
			[all] [the] [message] attachments of %message%
			[all] [the] %message%'[s] [message] attachments
	Message Builder TTS:
		ID: ExprBuilderTTS
		Description:
			change the TTS (Text To Speech) state of a message builder
		Examples:
			set tts state of {_m} to true
		Since:
			1.6
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] [discord] tts [state] of %messagebuilder%
			%messagebuilder%'[s] [discord] tts [state]
	Message Buttons Row:
		ID: ExprMessageButtonsRow
		Description:
			Get every row of buttons of a message. The number must be between 1 and 5 (max 5 buttons per row, 5 row per message)
		Examples:
			discord command buttons:
	prefixes: !
	trigger:
		reply with "*buttons ...*" and store it in {_msg}
		set {_row} to new buttons row
		add new link button with url "http://disky.itsthesky.info/" with style danger with content "DiSky Website" with emoji "🔗" to row {_row}
		add new button with url "custom-id" with style danger with content "Dangerous!" with emoji "🔶" to row {_row}
		add new button with url "custom-id2" with style success with content "Green :D" with emoji "📗" to row {_row}
		add new disabled button with url "custom-id3" with style secondary with content "I'm disabled" with emoji "😭" to row {_row}
		add row {_row} to message {_msg}
		Since:
			1.13
		Return type: Message Buttons Row
		Changers:
			none
		Patterns:
			[buttons] row of [the] [message] %message%
	Message from ID:
		ID: ExprFIDMessage
		Description:
			Return a message from its id. IT SEARCH ALL OVER DISCORD & EVERY CHANNEL! I highly recommend to specify the channel the message is in!
		Examples:
			set {_msg} to discord message with id "731885527762075648" in channel with id "731885527762075648"
		Since:
			1.11
		Return type: Discord Message
		Changers:
			none
		Patterns:
			[disky] [discord] message with [the] id %string% [in [the] [channel] %channel/textchannel%]
	NSFW State of a text channel (or builder):
		ID: ExprNSFWState
		Description:
			Get or set the NSFW state of text channel or builder.
		Examples:
			set nsfw state of text channel builder to true
		Since:
			1.4
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] nsfw state of %channel/textchannel/textchannelbuilder%
			%channel/textchannel/textchannelbuilder%'[s] nsfw state
	Name of Discord Entity:
		ID: ExprNameOf
		Description:
			Get or set the discord name of any channel, member, role, etc...
		Examples:
			set discord name of event-channel to "Iron Monger"
		Since:
			1.0
		Return type: Text
		Changers:
			set
		Patterns:
			[the] discord name of %member/role/rolebuilder/commandbuilder/voicechannel/voicechannelbuilder/webhookmessagebuilder/category/categorybuilder/channel/textchannel/textchannelbuilder/bot/guild/user/emote%
			%member/role/rolebuilder/commandbuilder/voicechannel/voicechannelbuilder/webhookmessagebuilder/category/categorybuilder/channel/textchannel/textchannelbuilder/bot/guild/user/emote%'[s] discord name
	New AFK Channel:
		ID: ExprNewAFKChannel
		Description:
			Get the new afk channel in a afk channel update event
		Since:
			1.9
		Return type: Voice Channel
		Changers:
			none
		Patterns:
			[the] new afk [voice] channel
	New Button:
		ID: ExprNewButton
		Description:
			Create a new custom button with a style, content, link state, enable state and emoji. The emoji MUST be a UNICODE character.
		Examples:
			discord command buttons:
	prefixes: !
	trigger:
		reply with "*buttons ...*" and store it in {_msg}
		set {_row} to new buttons row
		add new link button with url "http://disky.itsthesky.info/" with style danger with content "DiSky Website" with emoji "🔗" to row {_row}
		add new button with url "custom-id" with style danger with content "Dangerous!" with emoji "🔶" to row {_row}
		add new button with url "custom-id2" with style success with content "Green :D" with emoji "📗" to row {_row}
		add new disabled button with url "custom-id3" with style secondary with content "I'm disabled" with emoji "😭" to row {_row}
		add row {_row} to message {_msg}
		Since:
			1.13
		Return type: Message Button
		Changers:
			none
		Patterns:
			[a] new [(enabled|disabled)] [link] button [with (id|url)] %string%[,] (with style|styled) %buttonstyle%[,] [with (content|text) %-string%][,] [with emoji %-string%]
	New Button Row:
		ID: ExprNewButtonsRow
		Description:
			Create a new row of button with a maximum of 5 button per row. A message can only have a maximum of 5 row.
		Examples:
			discord command buttons:
	prefixes: !
	trigger:
		reply with "*buttons ...*" and store it in {_msg}
		set {_row} to new buttons row
		add new link button with url "http://disky.itsthesky.info/" with style danger with content "DiSky Website" with emoji "🔗" to row {_row}
		add new button with url "custom-id" with style danger with content "Dangerous!" with emoji "🔶" to row {_row}
		add new button with url "custom-id2" with style success with content "Green :D" with emoji "📗" to row {_row}
		add new disabled button with url "custom-id3" with style secondary with content "I'm disabled" with emoji "😭" to row {_row}
		add row {_row} to message {_msg}
		Since:
			1.13
		Return type: Message Buttons Row
		Changers:
			none
		Patterns:
			[a] new [buttons] row
	New Embed:
		ID: ExprNewEmbed
		Description:
			Return an empty discord message embed.
		Examples:
			set {_embed} to new discord embed
		Since:
			1.0, 1.12 (Template Support)
		Return type: Embed
		Changers:
			none
		Patterns:
			[disky] new [discord] [message] embed [using [the] [template] [(named|with name|with id)] %-string%]
	New Icon URL:
		ID: ExprOldIconURL
		Description:
			Get the new guild icon url in a guild icon update event.
		Since:
			1.9
		Return type: Text
		Changers:
			none
		Patterns:
			[the] old guild icon url
	New Icon URL:
		ID: ExprNewIconURL
		Description:
			Get the new guild icon url in a guild icon update event.
		Since:
			1.9
		Return type: Text
		Changers:
			none
		Patterns:
			[the] new guild icon url
	New Message Builder:
		ID: ExprMessageBuilder
		Description:
			Return an empty discord message builder.
		Examples:
			set {_m} to new message builder
		Since:
			1.4
		Return type: Message Builder
		Changers:
			none
		Patterns:
			[disky] [a] new [discord] message builder
	New Message Content:
		ID: ExprNewContent
		Description:
			Get the new content of a message in a message edit event.
		Since:
			1.4.1
		Return type: Text
		Changers:
			none
		Patterns:
			[the] new [message] content 
	New Nickname:
		ID: ExprNewNickname
		Description:
			Get the new nickname of a Member nickname change event
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[the] new nick[name]
	News State of a text channel (or builder):
		ID: ExprNewsState
		Description:
			Get or set the News state of text channel or builder, if the channel can be linked on another discord.
		Examples:
			set news state of text channel builder to true
		Since:
			1.4
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] news state of %channel/textchannel/textchannelbuilder%
			%channel/textchannel/textchannelbuilder%'[s] news state
	Nickname of Member:
		ID: ExprMemberNick
		Description:
			Get, set or reset the nickname of a specific member.
		Examples:
			set discord nickname of event-member to "Hello world !"
		Since:
			1.11
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [discord] nick[name] of %member%
			%member%'[s] [discord] nick[name]
	Old AFK Channel:
		ID: ExprOldAFKChannel
		Description:
			Get the old afk channel in a afk channel update event
		Since:
			1.9
		Return type: Voice Channel
		Changers:
			none
		Patterns:
			[the] new afk [voice] channel
	Old Message Content:
		ID: ExprOldContent
		Description:
			Get the old content of a message in a message edit event.
		Since:
			1.4.1
		Return type: Text
		Changers:
			none
		Patterns:
			[the] old [message] content 
	Old Nickname:
		ID: ExprOldNickname
		Description:
			Get the old nickname of a Member nickname change event
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[the] old nick[name]
	Online Status:
		ID: ExprOnlineStatus
		Description:
			Get a member online status, and set if for a bot.
		Examples:
			set online status of "MyBot" to idle
		Since:
			1.6
		Return type: Online Status
		Changers:
			set
		Patterns:
			[the] [discord] online status of %member/bot%
			%member/bot%'[s] [discord] online status
	Pinned Messages:
		ID: ExprPinnedMessages
		Description:
			Get all pinned message of a specific text channel.
		Examples:
			set {_msg::*} to pinned message of event-channel
		Since:
			1.0
		Return type: Discord Message
		Changers:
			none
		Patterns:
			[all] [the] pin[ed] (message[s]|msg) of %channel/textchannel%
			[all] [the] %channel/textchannel%'[s] pin[ed] (message[s]|msg)
	Presence:
		ID: ExprPresence
		Description:
			Return a custom presence to use in 'mark %bot% as %presence%' effect.
		Examples:
			set presence of bot "NAME" to listening "Kill LA Kill, Before my body is Dry"
set presence of bot "NAME" to watching "nanatsu no taizai"
set presence of bot "NAME" to playing "Evoland 2"
set presence of bot "NAME" to streaming "Kill LA Kill, Before my body is Dry" with url "https://www.youtube.com/watch?v=2h1OcA7juOQ"
		Since:
			1.12
		Return type: Online Presence
		Changers:
			none
		Patterns:
			[disky] listening [to] %string%
			[disky] watching [to] %string%
			[disky] playing [to] %string%
			[disky] streaming [to] %string% with [the] url %string%
			[disky] competing [to] %string%
	Presence of member / bot:
		ID: ExprMemberPresence
		Description:
			Get member discord presence, and set it for bot.
		Examples:
			set presence of bot "name" to listening "Hello world!"
		Since:
			1.12
		Return type: Online Presence
		Changers:
			set
		Patterns:
			[the] [discord] presence of %member/bot%
			%member/bot%'[s] [discord] presence
	Public Role of Guild:
		ID: ExprPublicRole
		Description:
			Return the public role (@everyone) of the specific guild.
		Examples:
			reply with mention tag of public role of event-guild
		Since:
			1.4
		Return type: Discord Role
		Changers:
			none
		Patterns:
			[disky] [the] [discord] public role of [the] [guild] %guild%
	Reaction / Emoji:
		ID: ExprEmoji
		Description:
			Get an emoji object using string. Could be an emoji ID (custom), unicode (default) or name (custom and default).
		Since:
			1.8
		Return type: Discord Emote
		Changers:
			none
		Patterns:
			(emoji|emote|reaction)[s] %strings% [(from|in) %-guild%]
	Registered Commands:
		ID: ExprRegisteredCommands
		Description:
			Get all discord command registered in the server (minecraft server, not the guild)
		Since:
			1.7
		Return type: Discord Command
		Changers:
			none
		Patterns:
			(registered|all) [discord] (command[s]|cmd[s])
	Repeating State of Guild:
		ID: ExprRepeatState
		Description:
			Get ot set the repeating state of a guild. If it's true, the track will be repeating every time.
		Examples:
			discord command repeat [<boolean>]:
	prefixes: *
	trigger:
		if arg-1 is not set:
			reply with ":x: **You __must__ set the repeating state to `true` or `false`!**"
			stop
		set repeating state of event-guild to arg-1
		if bot is repeating in event-guild:
			set {_name} to "enable"
		else:
			set {_name} to "disable"
		reply with ":v: **You have `%{_name}%` the repeating state of this guild!**"
		Since:
			1.11
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] [discord] repeating [state] of %guild%
			%guild%'[s] [discord] repeating [state]
	Role of User:
		ID: ExprRoleOf
		Description:
			Add or remove roles from an user.
		Examples:
			remove role with id "818182471203684407" from roles of event-user
			add role with id "818182471203684407" to roles of event-user
		Since:
			1.0
		Return type: Object
		Changers:
			add
			remove
		Patterns:
			[all] [the] [discord] [member] role[s] of %member%
			[all] [the] %member%'[s] [discord] [member] role[s]
	Self Member of Bot:
		ID: ExprSelfMember
		Description:
			Return the self member of a bot in a specific guild.
		Examples:
			set {_member} to self member of bot named "MyBot" in event-guild
		Since:
			1.4.2
		Return type: Discord Member
		Changers:
			none
		Patterns:
			[disky] [the] [(gateway|rest)] self member of [the] %bot% in [the] [guild] %guild%
	Separate State of a role (or builder):
		ID: ExprSeparateState
		Description:
			Get or set the separate state of a role or builder. If true, any member who got that role will be separate from other member.
		Examples:
			set separate state of role to true
		Since:
			1.4
		Return type: Boolean
		Changers:
			set
		Patterns:
			[the] separate state of %role/rolebuilder%
			%role/rolebuilder%'[s] separate state
	Slash Command Option:
		ID: ExprCommandOption
		Description:
			Get an option, from a Slash command event, with the specific id
		Since:
			1.5
		Return type: Object
		Changers:
			none
		Patterns:
			[the] [slash] [command] option [with id] %string%
	Slowmode of a text channel (or builder):
		ID: ExprSlowMode
		Description:
			Get or set the Slowmode of text channel or builder.
		Examples:
			set Slowmode of text channel builder to 0 # Use 0 to reset (deactivate) the slowmode
		Since:
			1.4
		Return type: Number
		Changers:
			set
		Patterns:
			[the] slow[ ]mode of %channel/textchannel/textchannelbuilder%
			%channel/textchannel/textchannelbuilder%'[s] slow[ ]mode
	Text Channel from ID:
		ID: ExprFIDText
		Description:
			Return a text channel from its id.
		Examples:
			set {_cha} to text channel with id "731885527762075648"
		Since:
			1.11
		Return type: Text Channel
		Changers:
			none
		Patterns:
			[disky] text channel with [the] id %string%
	Text Channel from ID:
		ID: ExprFIDRole
		Description:
			Return a text channel from its id.
		Examples:
			set {_cha} to text channel with id "731885527762075648"
		Since:
			1.11
		Return type: Discord Role
		Changers:
			none
		Patterns:
			[disky] role with [the] id %string%
	Title of Track / Embed:
		ID: ExprEmbedTitle
		Description:
			Get the title of a track and an embed, and set it for embed.
		Examples:
			set embed title of {_embed} to "The addon's developer link"
			clear embed title of {_embed}
			set {_title} to title of last played track
		Since:
			1.0
		Return type: Text
		Changers:
			set
			reset
		Patterns:
			[the] [(embed|track)] title of %embed/track%
			%embed/track%'[s] [(embed|track)] title
	Token of Bot:
		ID: ExprToken
		Description:
			Return the Token used for the bot.
		Examples:
			set {_token} to token of bot named "MyBot"
		Since:
			1.0
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] token of [the] %bot%
	Topic of a text channel (or builder):
		ID: ExprTopic
		Description:
			Get or set the topic of text channel or builder.
		Examples:
			set topic of text channel builder to "I love custom topic :heart:"
		Since:
			1.4
		Return type: Text
		Changers:
			set
		Patterns:
			[the] topic of %channel/textchannel/textchannelbuilder%
			%channel/textchannel/textchannelbuilder%'[s] topic
	Track Author:
		ID: ExprTrackAuthor
		Description:
			Return the author of a specific track
		Examples:
			set {_author} to author of last played track.
		Since:
			1.6-pre2
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [audio] track author of %track%
			%track%'[s] [discord] [audio] track author
	Track Duration:
		ID: ExprTrackDuration
		Description:
			Return the duration of a specific track
		Examples:
			set {_duration} to duration of last played track.
		Since:
			1.6-pre2
		Return type: Timespan
		Changers:
			none
		Patterns:
			[the] [discord] [audio] track duration of %track%
			%track%'[s] [discord] [audio] track duration
	Track Identifier:
		ID: ExprTrackIdentifier
		Description:
			Return the unique identifier of a track
		Examples:
			set {_id} to identifier of current track of event-guild
		Since:
			1.11
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [audio] track id[entifier] of %track%
			%track%'[s] [discord] [audio] track id[entifier]
	Track Position:
		ID: ExprTrackPosition
		Description:
			Return the position of a specific track
		Examples:
			set {_position} to position of last played track.
		Since:
			1.6-pre2
		Return type: Timespan
		Changers:
			none
		Patterns:
			[the] [discord] [audio] track position of %track%
			%track%'[s] [discord] [audio] track position
	Track Thumbnail:
		ID: ExprTrackThumbnail
		Description:
			Return the thumbnail URL of a specific track
		Examples:
			set thumbnail of embed to thumbnail of last played track.
		Since:
			1.6-pre2
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [audio] track thumbnail of %track%
			%track%'[s] [discord] [audio] track thumbnail
	Track URL:
		ID: ExprTrackURL
		Description:
			Return the YouTube URL of a track
		Examples:
			set {_url} to url of last played track.
		Since:
			1.6-pre2
		Return type: Text
		Changers:
			none
		Patterns:
			[the] [discord] [audio] track (url|uri) of %track%
			%track%'[s] [discord] [audio] track (url|uri)
	Track the Bot is Playing:
		ID: ExpTrackBotIsPlaying
		Description:
			Return the track (if set) which the bot is currently playing.
		Since:
			1.6
		Return type: Audio Track
		Changers:
			none
		Patterns:
			[disky] [the] track [the] [bot] is playing in [the] [guild] %guild%
	Type of Variable:
		ID: ExprVarTypeOf
		Description:
			Get the Skript type of a Skript variable.
		Since:
			1.9
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] var[iable] type of [var] %object%
	Uptime of Bot:
		ID: ExprUptime
		Description:
			Return the total uptime of a bot.
		Examples:
			set {_uptime} to uptime of bot named "MyBot"
		Since:
			1.4.2
		Return type: Timespan
		Changers:
			none
		Patterns:
			[disky] [the] up[ ]time of [the] %bot%
	Used Alias:
		ID: ExprUsedAlias
		Description:
			Get the used alias in a discord command trigger.)
		Since:
			1.11
		Return type: Text
		Changers:
			none
		Patterns:
			(registered|all) [discord] (command[s]|cmd[s])
	User Badges:
		ID: ExprUserBadges
		Description:
			Get all badges the user have. It does NOT contain the nitro badge (either the boost one)!
		Examples:
			discord command badge <user>:
	prefixes: !
	trigger:
		reply with "%mention tag of arg-1% have %size of badges of arg-1% badge(s)!"
		Since:
			1.5.4
		Return type: Discord Bot
		Changers:
			none
		Patterns:
			[disky] [discord] badges of [the] [user] %user/member%
	User Banned:
		ID: ExprUserIsBanned
		Description:
			See if the specific user is banned from the specific guild
		Since:
			1.4
		Return type: Boolean
		Changers:
			none
		Patterns:
			[disky] [(user|member)] %user/member% is ban[ned] from [the] [guild] %guild%
	User Creation Date:
		ID: ExprUserCreationDate
		Description:
			Return the date of the user account creation.
		Examples:
			creation date of event-user
		Since:
			1.6
		Return type: Date
		Changers:
			none
		Patterns:
			[disky] [discord] creation date of [the] [user] %user/member%
	User Tag (#):
		ID: ExprUserDiscriminator
		Description:
			Get the four number after the # of an user (doesn't include the "#"
		Examples:
			reply with "Tag: ##%tag of event-user% !"
		Since:
			1.3
		Return type: Text
		Changers:
			none
		Patterns:
			[disky] [the] [discord] tag of [the] [user] %user/member%
	User from ID:
		ID: ExprFIDUser
		Description:
			Return a user from its id.
		Examples:
			set {_usr} to user with id "731885527762075648"
		Since:
			1.11
		Return type: Discord User
		Changers:
			none
		Patterns:
			[disky] user with [the] id %string%
	Voice channel from ID:
		ID: ExprFIDVoice
		Description:
			Return a Voice channel from its id.
		Examples:
			set {_cha} to voice channel with id "731885527762075648"
		Since:
			1.11
		Return type: Voice Channel
		Changers:
			none
		Patterns:
			[disky] voice channel with [the] id %string%
Types:
	Audio Play Error:
		ID: PlayError
		Description:
			Represent an audio play error.
		Since:
			1.6
		Patterns:
			playerror[s]
	Audio Site:
		ID: AudioSite
		Description:
			Represent a website were audio could be found and loaded.
		Usage: youtube, soundcloud
		Since:
			1.9
		Patterns:
			audiosite[s]
	Audio Track:
		ID: AudioTrack
		Description:
			Represent an audio track, with duration, name, etc...
		Since:
			1.6
		Patterns:
			track[s]
	Button Style:
		ID: ButtonStyle
		Description:
			Use in button builder, a specific style of a button.
		Usage: primary, success, secondary and danger
		Since:
			1.12
		Patterns:
			buttonstyle[s]
	Category:
		ID: Category
		Description:
			Represent a category in a guild, which is already created.
		Since:
			1.4.2
		Patterns:
			categor(y|ies)
	Category Builder:
		ID: CategoryBuilder
		Description:
			Represent a category builder, which is not created yet in a guild.
		Since:
			1.4.1
		Patterns:
			categorybuilder[s]
	Command Builder:
		ID: SlashCommand
		Description:
			Represent a non-registered discord slash command.
		Since:
			1.5
		Patterns:
			commandbuilder[s]
	Discord Bot:
		ID: JDA
		Description:
			Represent a loaded Discord Bot
		Since:
			1.0
		Patterns:
			bot[s]
	Discord Bot:
		ID: Badge
		Description:
			Represent a loaded Discord Bot
		Since:
			1.0
		Patterns:
			bot[s]
	Discord Command:
		ID: CommandObject
		Description:
			Represent a discord command, with arguments, usage, description, category, etc...
		Since:
			1.7
		Patterns:
			discordcommand[s]
	Discord Emote:
		ID: Emote
		Description:
			Represent a discord emote
		Since:
			1.8
		Patterns:
			emote[s]
	Discord Guild (Server):
		ID: Guild
		Description:
			Represent a discord guild
		Since:
			1.0
		Patterns:
			guild[s]
	Discord Invite:
		ID: Invite
		Description:
			Represent a discord invite, with creator, used time, code, etc...
		Since:
			1.7
		Patterns:
			invite[s]
	Discord Member:
		ID: Member
		Description:
			Represent a discord user which is in any guild.
		Since:
			1.0
		Patterns:
			member[s]
	Discord Message:
		ID: UpdatingMessage
		Description:
			Represent a discord message, with ID, author, reactions, etc...
		Since:
			1.0
		Patterns:
			message[s]
	Discord Permission:
		ID: Permission
		Description:
			Permission used for a role, channel, member, etc...
		Usage: create instant invite, kick members, ban members, administrator, manage channel, manage server, message add reaction, view audit logs, view channel, message read, message write, message tts, message manage, message embed links, message attach files, message history, message mention everyone, message ext emoji, voice connect, voice speak, voice mute others, voice deaf others, voice move others, voice use vad, nickname change, nickname manage, manage roles, manage permissions, manage webhooks, manage emotes, unknown
		Since:
			1.4
		Patterns:
			permission[s]
	Discord Role:
		ID: Role
		Description:
			Represent a discord role, within a guild.
		Since:
			1.0
		Patterns:
			role[s]
	Discord User:
		ID: User
		Description:
			Represent a discord user, which is not into a guild.
		Since:
			1.0
		Patterns:
			user[s]
	Discord Webhook Builder:
		ID: Webhook
		Description:
			Represent a webhook which is not actually made in the guild.
		Since:
			1.2
		Patterns:
			webhookbuilder[s]
	Embed:
		ID: EmbedBuilder
		Description:
			Represent a discord embed, with title, description, fields, author, footer, etc...
		Since:
			1.0
		Patterns:
			embed
	Guild Channel:
		ID: GuildChannel
		Description:
			Represent a Guild discord channel. Can be both text OR voice. Action specific of a voice channel (like user limit), used on text channel will throw an error.
		Since:
			1.8
		Patterns:
			channel[s]
	Invite Builder:
		ID: InviteBuilder
		Description:
			Represent a discord invite builder, with max use, max age, etc...
		Since:
			1.7
		Patterns:
			invitebuilder[s]
	Message Attachment:
		ID: Attachment
		Description:
			Represent a discord message attachment.
		Since:
			1.7
		Patterns:
			attachment[s]
	Message Builder:
		ID: MessageBuilder
		Description:
			Represent a discord message builder, which you can append embed and string.
		Since:
			1.4
		Patterns:
			messagebuilder[s]
	Online Presence:
		ID: Activity
		Description:
			Represent a custom presence used in 'mark %bot% as %presence%' effect
		Since:
			1.12
		Patterns:
			presence[s]
	Online Status:
		ID: OnlineStatus
		Description:
			Represent a user / bot online status.
		Usage: online, offline, idle, do not disturb
		Since:
			1.6
		Patterns:
			onlinestatus
	Option Type:
		ID: OptionType
		Description:
			Represent a slash command option type.
		Usage: STRING (a text, string, almost anythings)
INTEGER (rounded number, so no decimal here)
USER (a guild user)
ROLE (a guild role)
BOOLEAN (only two state, true or false)
CHANNEL (a guild text channel)
		Since:
			1.5
		Patterns:
			optiontype[s]
	Role Builder:
		ID: RoleBuilder
		Description:
			Represent a discord role builder, which is not created yet in a guild.
		Since:
			1.4
		Patterns:
			rolebuilder[s]
	Text Channel:
		ID: TextChannel
		Description:
			Represent a Discord text channel (where file and message can be sent)
		Since:
			1.0
		Patterns:
			textchannel[s]
	TextChannel Builder:
		ID: TextChannelBuilder
		Description:
			Represent a textchannel builder
		Since:
			1.4
		Patterns:
			textchannelbuilder[s]
	Voice Channel:
		ID: VoiceChannel
		Description:
			Represent a discord voice channel.
		Since:
			1.6
		Patterns:
			voicechannel[s]
	Voice Channel Builder:
		ID: VoiceChannelBuilder
		Description:
			Represent a discord voice channel builder, which is not created yet in a guild.
		Since:
			1.6
		Patterns:
			voicechannelbuilder[s]
	Webhook Message Builder:
		ID: WebhookMessageBuilder
		Description:
			Represent a webhook message builder, with multiple embed, text content AND a different appearance than the original webhook.
		Since:
			1.8
		Patterns:
			webhookmessagebuilder[s]