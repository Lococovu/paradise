function RM_Holo_RoomEntranceCreate(player: player, location: location):
  # Сначала проверяем не стоит ли тут уже какая-то голограмма
  set {_hologram} to {hologram::%{_player}%::%{_location}%}

  if {_hologram} is set:
    if hologram {_hologram} is deleted:
    else:
      stop

  if distance between {_player} and {_location} > 1.5:
    stop

  set {_checker} to 0.5
  set {_sticky} to true

  if {workers::%{_player}%::roomEditor} is set:
    delete {workers::%{_player}%::roomEditor}
    stop

  # Давайте сначала загрузим информацию
  # об данной голограмме
  set {_roomId} to {data::rooms::%{_location}%::roomId}
  {_roomId} is set

  # Берём данные про эту квартиру
  set {_room::type} to {data::rooms::%{_roomId}%::type}
  set {_room::address} to {data::rooms::%{_roomId}%::address}
  set {_room::price} to {data::rooms::%{_roomId}%::price}

  set {_room::isRentable} to {data::rooms::%{_roomId}%::isRentable}
  set {_room::isBuyable} to {data::rooms::%{_roomId}%::isBuyable}

  set {_occupant::uuid} to {data::rooms::%{_roomId}%::occupant::uuid}
  set {_occupant::character} to {data::rooms::%{_roomId}%::occupant::character}

  if {_room::isRentable} is true:
    set {_occupant::rentTime} to {data::rooms::%{_roomId}%::occupant::rentTime}

  set {_character} to getCurrentCharacter({_player})
  if "%{_occupant::uuid}%/%{_occupant::character}%" is "%{_player}'s uuid%/%{_character}%":
    set {_occupant::isCurrentPlayer} to true
  else:
    set {_occupant::isCurrentPlayer} to false

  # Давайте же сразу создадим эту голограмму и
  # отдадим информацию о текущей голограмме обратно.
  delete {data::rooms::%{_roomId}%::editing}
  set {_editing} to {data::rooms::%{_roomId}%::editing}

  # if {_editing} is true:
  #   set {_lines::*} to "&c⚠ &fДанное помещение", "&fнаходится в режиме", "&fредактирования."
  # else:
  #   if {_occupant::uuid} or {_occupant::character} is not set:
  #     if {_room::isBuyable} is true:
  #       add "&e△ &fМожно купить за", "&e%{_room::price}%$" to {_information::*}

  #     if {_room::isRentable} is true:
  #       add "&e△ &fМожно арендовать за", "&e%{_room::price}%$&7/2 дня" to {_information::*}

  #     if size of {_information::*} <= 0:
  #       set {_information::*} to "&c⚠ &fПомещение нельзя ни", "&fкупить ни арендовать."

  #   else:
  #     if {_occupant::isCurrentPlayer} is true:
  #       if {_room::isRentable} is true:

  #       else:
  #         set {_information::*} to "&a✓ &fЭто ваше помещение.", "&fНажмите &eПКМ &fчто бы", "&fоткрыть меню."
  #     else:
  #       if {_room::isRentable} is true:
  #         set {_information::*} to "&c✕ &fЭто помещение уже арендовано"
  #       else:
  #         set {_information::*} to "&c✕ &fЭто помещение уже купленно"

  #   set {_lines::*} to "&7%getRoomTypeLabel({_room::type})%", "&7%{_room::address}%", {_information::*}

  wait 2 ticks
  loop all blocks in radius 1 around {_player}:
    if {block::%location of loop-block%::room} is set:
      set {_checkRoomId} to {block::%location of loop-block%::room}

      if {_occupant::uuid} and {_occupant::character} is set:
        if {data::rooms::%{_checkRoomId}%::occupant::uuid} is {_player}'s uuid:
          set {_passed} to true
          exit 1 loop
      else:
        {_checkRoomId} is {_roomId}
        set {_passed} to true

  if {_passed} is not true:
    stop

  set {_hologram::location} to {_location}

  create new hologram with clickable lines "..." at {_hologram::location} and store it in variable {_hologram}

  set {_location::check} to {_hologram::location}

  make hologram {_hologram} invisible by default
  # reveal hologram {_hologram} to {_player}

  # Ну а теперь давайте создадим небольшой воркер, который будет
  # проверять релевантность этой голограммы.
  set {_waiting} to true

  while {_waiting} is true:
    if {_player} is offline:
      delete {hologram::%{_player}%::%{_location}%}
      delete hologram {_hologram}
      stop

    # Проверяем состояние текущего блока
    if {workers::%{_player}%::roomEditor} is set:
      delete {hologram::%{_player}%::%{_location}%}
      delete hologram {_hologram}
      stop

    # Проверяем, не находится ли игрок в квартире
    if {_checker} is set:
      if {_checker} <= 0:
        delete {_passed}
        set {_checker} to 0.5

        loop all blocks in radius 1 around {_player}:
          if {block::%location of loop-block%::room} is set:
            set {_checkRoomId} to {block::%location of loop-block%::room}

            if {_occupant::uuid} and {_occupant::character} is set:
              if {data::rooms::%{_checkRoomId}%::occupant::uuid} is {_player}'s uuid:
                set {_passed} to true
                exit 1 loop
            else:
              {_checkRoomId} is {_roomId}
              set {_passed} to true

        if {_passed} is not true:
          delete {hologram::%{_player}%::%{_location}%}
          delete hologram {_hologram}
          stop

      reduce {_checker} by 0.05
    
    # set {_location::check}'s y coordinate to {_player}'s y coordinate
    # if distance between {_player} and {_location::check} <= 1.5:
    #   set {_sticky} to true

    delete {_relationshipHologramExpanded}
    loop {workers::%{_player}%::relationship::holograms::*}:
      set {_index} to loop-index

      if {workers::%{_player}%::relationship::holograms::%{_index}%::expandedMenu} is set:
        set {_relationshipHologramExpanded} to true
        exit 1 loop

    if {_relationshipHologramExpanded} is true:
      {_player} can see hologram {_hologram}
      hide hologram {_hologram} from {_player}
    else:
      {_player} can not see hologram {_hologram}
      reveal hologram {_hologram} to {_player}

    if {_sticky} is true:
      if {_player} can not see hologram {_hologram}:
        reveal hologram {_hologram} to {_player}

      # set {_directions::*} to 
      set {_holo::location} to location 2.5 meters infront and 1.5 meters to the left of {_player}
      add 1.85 to y coordinate of {_holo::location}

      teleport hologram {_hologram} to {_holo::location}

      {_occupant::uuid} and {_occupant::character} is set:
        {_occupant::uuid} is {_player}'s uuid
        {_occupant::character} is getCurrentCharacter({_player})
        if {_updated} is not set:
          set {_updated} to true
          set {_timer} to 6

          set {_lines::*} to "&fНажмите &9[F] &fчто бы", "&fоткрыть меню помещения."
          set all lines of hologram {_hologram} to {_lines::*}
      else:
        if {_updated} is not set:
          set {_updated} to true

          set {_lines::*} to "&7%{_room::address}%", "&e$ &fСтоимость: &e%{_room::price}%$", "&e[F]"
          set all lines of hologram {_hologram} to {_lines::*}

    if {hologram::%{_player}%::%{_location}%} isn't {_hologram}:
      set {hologram::%{_player}%::%{_location}%} to {_hologram}

    {_timer} <= 0:
      delete {hologram::%{_player}%::%{_location}%}
      delete hologram {_hologram}

      send action bar "&ei &fВы можете открыть меню квартиры, нажав &e[F] &fна клавиатуре." to {_player}
      stop

    if {_timer} is set:
      reduce {_timer} by 0.05
      send action bar "&ei &fГолограмма скроется через &e%round({_timer})% &fс." to {_player}
    wait 1 tick

function RM_Holo_RoomEntranceClick(player: player):
  loop all blocks in radius 3 around {_player}:
    set {_location::block} to location of block at loop-value
    set {_roomId} to {data::rooms::%{_location::block}%::roomId}

    if {_roomId} is set:
      exit 1 loop

  {_roomId} is set
  openRoomMenu({_player}, {_roomId})