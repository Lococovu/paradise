function loadPlayerInventory(player: player):

  # Отчищаем инвентарь
  set {_slot} to 0
  loop 50 times:
    set slot {_slot} of {_player}'s inventory to air

    add 1 to {_slot}

  set {_item} to black stained glass pane named ""
  set {_slot} to 0
  loop 36 times:
    set slot {_slot} of {_player}'s inventory to {_item}

    add 1 to {_slot}

  startEmotionsWorker({_player})

  # Загружаем все предметы игрока
  set {_slot} to 0
  loop 9 times:
    set {_uuid} to {_player}'s uuid
    set {_item} to {data::%{_uuid}%::item::%{_slot}%}
    set slot {_slot} of {_player}'s inventory to {_item}

    add 1 to {_slot}

  # 
  # Загружаем OOC предметы
  # {SkullOwner:{Id:"""",Properties:{textures:[{Value:""""}]}}}

  # Помощь
  set {_help} to player head named "&9★ &fПомощь" with lore "", "&f &fНе знаете что делать? Хотите получше познакомиться", "&f &fс сервером и всеми его возможностями? Ну тогда вам сюда!", "&f &fТут вы сможете найти полную документацию по каждой функции", "&f &fсервера. Так же вы сможете получить ответы на самые", "&f &fчастые вопросы!", "", "&e▹ &fНажмите, что бы перейти"
  add "{SkullOwner:{Id:""a8806521-1911-4885-87ac-5a65755364e2"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYmM4ZWExZjUxZjI1M2ZmNTE0MmNhMTFhZTQ1MTkzYTRhZDhjM2FiNWU5YzZlZWM4YmE3YTRmY2I3YmFjNDAifX19""}]}}}" to item-nbt of {_help}
  set slot 16 of {_player} to {_help}

  # Главное меню
  set {_menu} to player head named "&9★ &fГлавное меню" with lore "", "&f &fВ этом меню вы сможете найти чуть ли не всё самое", "&f &fглавное на сервере! Из главного меню вы с лёгкостью", "&f &fсможете перейти в, например, меню помощи, книгу крафтов,", "&f &fдействий персонажа; сможете посмотреть общую информацию", "&f &fо вашем персонаже ну и многое другое!", "", "&e▹ &fНажмите, что бы перейти"
  add "{SkullOwner:{Id:""53bc99c1-6922-e3f0-c9ec-1f18e3df3d6c"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOWQzZDI1MGUyNWJiY2EzYTYyYmU1YjNlZjAyY2ZjYWI2ZGNkYzQyNDg4NGM5YTdkNWNjOTVjOWQwIn19fQ==""}]}}}" to item-nbt of {_menu}
  set slot 17 of {_player} to {_menu}

  # Динамические
  # Запускаем воркер
  if {workers::%{_player}%::inventory} is set:
    set {workers::%{_player}%::inventory} to "stop"
    wait 2 seconds

  delete {workers::%{_player}%::inventory}
  delete {workers::%{_player}%::inventory::*}

  set {_waiting} to true
  while {_waiting} is true:
    if {_player} is offline:
      set {workers::%{_player}%::inventory} to "stop"
    
    if {workers::%{_player}%::inventory} is not set:
      set {workers::%{_player}%::inventory} to true
    else:
      set {_action} to {workers::%{_player}%::inventory}

      if {_action} is "stop":
        stop

    if {_check::timer} is set:
      reduce {_check::timer} by 0.05

      if {_check::timer} <= 0:
        delete {_check::timer}
    else:
      set {_check::timer} to 2
      delete {_name}
      delete {_leader}
      delete {_emotions}
      delete {_emotions::*}

      # Просто меняем предмет, отвечающий за текущую эмоцию
      # в инвентаре игрока
      set {_leader} to getPlayerEmotion({_player})
      set {_emotions} to getAllPlayerEmotions({_player})
      set {_emotions::*} to {_emotions} split at ","

      # Leader
      evaluate:
        set {_item} to EM_%{_leader}%GetItem({_player})
        set {_name} to EM_%{_leader}%GetName({_player})

      if {_item} is not set:
        set {_item} to player head named "&9★ &fНеизвестная эмоция" with lore "", "&f &fДа-да, это ошибка. Напишите админам. %{_leader}%"
      else:
        # Добавляем названия других эмоций
        # loop {_emotions::*}:
        #   if loop-value isn't {_leader}:
        #     add loop-value to {_finalEmotions::*}

        # if size of {_finalEmotions::*} > 0:
        #   loop {_finalEmotions::*}:
        #     set {_code} to loop-value
        #     delete {_icon}

        #     evaluate:
        #       set {_icon} to EM_%{_code}%GetItem({_player})

        #     if {_icon} is set:
        #       set {_name} to {_icon}'s name

        #     add "- %{_name}%" to {_item}'s lore


      if {_name::old} isn't {_name}:
        set {_name::old} to {_name}

        # Показываем игроку новую эмоцию
        notifyEmotion({_player}, {_name})

      set slot 9 of {_player} to {_item}

    wait 1 tick

function notifyEmotion(player: player, emotion: string):
  # TODO
  send action bar with text "%{_emotion}%" to {_player}

# Функция, которая будет сохранять инвентарь игрока
function savePlayerInventory(player: player):
  set {_slot} to 0
  loop 9 times:
    set {_item} to slot {_slot} of {_player}'s inventory
    set {_uuid} to {_player}'s uuid
    set {data::%{_uuid}%::item::%{_slot}%} to {_item}

    add 1 to {_slot}

function checkInventoryForBarriers(player: player):
  wait 2 ticks
  
  set {_slot} to 0

  loop 9 times:
    set {_item} to slot {_slot} of {_player}'s inventory
    if "%{_item}%" contains "stained glass pane":
      set slot {_slot} of {_player}'s inventory to air

    add 1 to {_slot}

# Ивенты
on inventory click:
  checkInventoryForBarriers(player)
  
  if event-item is stained glass pane:
    cancel event
  else:
    if name of event-item contains "★":
      cancel event

      checkInventoryForBarriers(player)

      # 
      if name of event-item contains "меню":
        execute player command "/menu"
      else if name of event-item contains "помощь":
        execute player command "/help"
      else:
        execute player command "/emotions"

on inventory move:
  if event-item is stained glass pane:
    cancel event

    checkInventoryForBarriers(player)
  else:
    if name of event-item contains "★":
      cancel event

      checkInventoryForBarriers(player)

on drop:
  if event-item is stained glass pane:
    cancel event

    checkInventoryForBarriers(player)
  else:
    if name of event-item contains "★":
      cancel event

      checkInventoryForBarriers(player)

on pickup:
  if event-item is barrier:
    cancel event

    checkInventoryForBarriers(player)
  else:
    if name of event-item contains "★":
      cancel event

      checkInventoryForBarriers(player)
